{
  "openapi": "3.0.0",
  "info": {
    "description": "An API for SUM VIET\nDon't forget to take it for a spin by clicking on the **Try in Client**\nbutton next to each operation!.<br> <strong>For development, please use <a href='https://api.sumviet.xyz/docs/v2' target='_blank'>APIs Doc v2</a> for up-to-date APIs document now</strong>. <br/><i>&#95;&#95;<strong>From Backend Summoner With &#129505;&#95;&#95;</strong></i>",
    "version": "1.0.1",
    "title": "SUM VIET API",
    "termsOfService": "",
    "contact": {}
  },
  "paths": {
    "/config": {
      "get": {
        "summary": "get list config",
        "tags": ["config"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["config"],
        "summary": "create a config",
        "requestBody": {
          "$ref": "#/components/requestBodies/Body3"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["config"],
        "summary": "update a config",
        "requestBody": {
          "$ref": "#/components/requestBodies/Body3"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["config"],
        "summary": "delete a config",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/config/init": {
      "get": {
        "tags": ["config"],
        "summary": "init or reset",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/get-follow-status?id={id}": {
      "get": {
        "tags": ["user"],
        "summary": "user: get follow status",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/user/get-user-info": {
      "get": {
        "tags": ["user"],
        "summary": "user: get one by id (user login)",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/get-ref-users": {
      "get": {
        "tags": ["user"],
        "summary": "user: get ref users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/enter-ref-code": {
      "post": {
        "tags": ["user"],
        "summary": "user: update ref point",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ref_code"],
                "properties": {
                  "ref_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/change-pass": {
      "put": {
        "tags": ["user"],
        "summary": "user change pass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_pass", "new_pass"],
                "properties": {
                  "old_pass": {
                    "type": "string"
                  },
                  "new_pass": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "errors": {
              "password": "7001705",
              "old_pass": ""
            },
            "message": "new password is duplicate with old password"
          },
          "500": {
            "errors": {
              "old_pass": "5000200"
            },
            "message": "wrong password"
          }
        }
      }
    },
    "/user/update-user-info": {
      "post": {
        "tags": ["user"],
        "summary": "user: update user info (user login)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "birthday": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "image base 64 string"
                  },
                  "about_me": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string",
                    "description": "+84......"
                  },
                  "email": {
                    "type": "string"
                  },
                  "PIN": {
                    "type": "string"
                  },
                  "addresses": [
                    {
                      "type": "string"
                    }
                  ],
                  "bank": {
                    "type": "string"
                  },
                  "bank_account_number": {
                    "type": "string"
                  },
                  "bank_branch": {
                    "type": "string"
                  },
                  "user_bank_name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/update-KYC": {
      "post": {
        "tags": ["user"],
        "summary": "user update KYC",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address",
                  "backside_passport_image",
                  "birthday",
                  "front_passport_image",
                  "passport_number",
                  "passport_type",
                  "real_name",
                  "selfy_image"
                ],
                "properties": {
                  "selfy_image": {
                    "type": "string"
                  },
                  "front_passport_image": {
                    "type": "string"
                  },
                  "backside_passport_image": {
                    "type": "string"
                  },
                  "passport_number": {
                    "type": "string"
                  },
                  "real_name": {
                    "type": "string"
                  },
                  "passport_type": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/update-KYC-raw": {
      "put": {
        "tags": ["user"],
        "summary": "user update KYC",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address",
                  "backside_passport_image",
                  "birthday",
                  "front_passport_image",
                  "passport_number",
                  "passport_type",
                  "name",
                  "selfy_image"
                ],
                "properties": {
                  "selfy_image": {
                    "type": "string",
                    "description": "path of image"
                  },
                  "front_passport_image": {
                    "type": "string",
                    "description": "path of image"
                  },
                  "backside_passport_image": {
                    "type": "string",
                    "description": "path of image"
                  },
                  "passport_number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "passport_type": {
                    "type": "string",
                    "enum": ["national_identity_card", "driving_license", "passport"]
                  },
                  "address": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/update-ref-point": {},
    "/user/admin/get-users": {
      "get": {
        "tags": ["user"],
        "summary": "user of admin path: get all users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["non-kyc", "approve-kyc", "reject-kyc", "pending-kyc", "disabled"],
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/admin/raw-users": {
      "get": {
        "tags": ["user"],
        "summary": "user of admin path: get all users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["non-kyc", "approve-kyc", "reject-kyc", "pending-kyc", "disabled"],
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/autho-pin": {
      "post": {
        "tags": ["user"],
        "summary": "user: autho pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["PIN"],
                "properties": {
                  "PIN": {
                    "type": "string",
                    "description": "only number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/pin": {
      "post": {
        "tags": ["user"],
        "summary": "user: update pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_code", "new_code", "password"],
                "properties": {
                  "new_code": {
                    "type": "string",
                    "description": "only number"
                  },
                  "old_code": {
                    "type": "string",
                    "description": "only number"
                  },
                  "password": {
                    "type": "string",
                    "description": "only number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/reset-pin": {
      "put": {
        "tags": ["company"],
        "summary": "company update pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "new_code"],
                "properties": {
                  "new_code": {
                    "type": "string",
                    "description": "new code have 6 charactor"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "company: 7000100 - company is not available \n user: 7001700 - user not available \n password: 5000200 - wrong password \n old_code: 5000603 - wrong old pin \n new_code: 7001705 - repeat pin"
          }
        }
      }
    },
    "/user/admin/get-user?id={id}": {
      "get": {
        "tags": ["user"],
        "summary": "user of admin path:",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/user/admin/get-by-status": {
      "get": {
        "tags": ["user"],
        "summary": "user of admin path: get users by status",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["non-kyc", "approve-kyc", "reject-kyc", "pending-kyc", "disabled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/admin/check-KYC": {
      "post": {
        "tags": ["user"],
        "summary": "user of  admin path: check KYC",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["backside_passport_status", "front_passport_status", "selfy_status"],
                "properties": {
                  "selfy_status": {
                    "type": "string"
                  },
                  "front_passport_status": {
                    "type": "string"
                  },
                  "backside_passport_status": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user/admin/update-status": {
      "post": {
        "tags": ["user"],
        "summary": "user of admin path: update status user",
        "requestBody": {
          "$ref": "#/components/requestBodies/Body4"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/auth/init-server": {
      "post": {
        "tags": ["auth"],
        "summary": "Init server",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/auth/send-sms": {
      "post": {
        "tags": ["auth"],
        "summary": "verify sms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone", "type"],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": ""
                  },
                  "type": {
                    "type": "string",
                    "enum": ["reset-password", "verify"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "description": "7001700 => user not found \n 7001707 => phone is existed  \n 7001703 => time to resend sms is not expired"
                    },
                    "user": {
                      "type": "string",
                      "description": "7001703 => time to resend code is not expired \n 7001707 => user is existed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/raw-send-sms": {
      "post": {
        "tags": ["auth"],
        "summary": "verify sms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone", "type"],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": ""
                  },
                  "type": {
                    "type": "string",
                    "enum": ["reset-password", "verify"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "description": "7001700 => user not found \n 7001707 => phone is existed  \n 7001703 => time to resend sms is not expired"
                    },
                    "user": {
                      "type": "string",
                      "description": "7001703 => time to resend code is not expired \n 7001707 => user is existed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["auth"],
        "summary": "verify sms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone", "type", "code"],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": ""
                  },
                  "type": {
                    "type": "string",
                    "enum": ["reset-password", "verify"]
                  },
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "description": "7001700 => user not found \n 7001707 => phone is existed  \n 7001703 => time to resend sms is not expired"
                    },
                    "user": {
                      "type": "string",
                      "description": "7001703 => time to resend code is not expired \n 7001707 => user is existed"
                    },
                    "code": {
                      "type": "string",
                      "description": "7005000 => out of max wrong times \n 7000100 => wrong input"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login-with-facebook": {
      "post": {
        "tags": ["auth"],
        "summary": "login with facebook",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/auth/admin-login": {
      "post": {
        "tags": ["auth"],
        "summary": "admin login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "user_name"],
                "properties": {
                  "user_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "description": "user_name:"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/user-login": {
      "post": {
        "tags": ["auth"],
        "summary": "user-login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone", "password"],
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "description": "user login not with facebook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/auth/user-register": {
      "post": {
        "tags": ["auth"],
        "summary": "user register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "password", "phone", "token"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string",
                    "description": "if \"email' is not exist, this vlue is required"
                  },
                  "ref_code": {
                    "type": "string",
                    "description": "+84......"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "string",
                      "description": "5000201 => user is existed \n 7002400 => phone register not found"
                    },
                    "user": {
                      "type": "string",
                      "description": "7002400 => phone verify not found: wrong phone or wrong code"
                    },
                    "ref_code": {
                      "type": "string",
                      "description": "7001700 => ref user not found"
                    },
                    "token": {
                      "type": "string",
                      "description": "7001000 => wrong input \n 7005000 => out of max wrong times"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user-reset-password": {
      "post": {
        "tags": ["auth"],
        "summary": "auth: user reset password",
        "requestBody": {
          "$ref": "#/components/requestBodies/BodyResetPassword"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string",
                      "description": "7001700 => user not found: wrong phone"
                    },
                    "token": {
                      "type": "string",
                      "description": "7005000 => verify time was expired \n 7000100 => wrong token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/get-admins": {},
    "/admin/get-admin/{admin_id}": {
      "get": {
        "tags": ["admin"],
        "summary": "admin : get admin by id",
        "description": "only root admin  (permission code is 1)  and admin_mod (permission code\nis 2) can get",
        "parameters": [
          {
            "name": "admin_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "admin_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/admin/get-admin?permission_code={permission_code}": {
      "get": {
        "tags": ["admin"],
        "summary": "get admin by permission code",
        "description": "only root and admin_mod (permission code 1 and 2) can get ",
        "parameters": [
          {
            "name": "permission_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer ..........",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "{\n\"statusCode\": 200,\n\"data\":{\n\"_id\": \"5c999efa2fd93332d3e6b94a\",\n\"user_name\": \"videos_mod\",\n\"email\": \"videos_mod_video@gmail.com\",\n\"last_name\": \"videos_mod_video\",\n\"status\": \"active\",\n\"permission_code\": 3\n}\n}"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "permission_code",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/admin/create-new": {
      "post": {
        "tags": ["admin"],
        "summary": "create new admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer ................",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "first_name",
                  "last_name",
                  "password",
                  "permission_code",
                  "user_name"
                ],
                "properties": {
                  "user_name": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "permission_code": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/update-permission-group": {
      "post": {
        "tags": ["admin"],
        "summary": "set permission",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer .............",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["admin_id", "permission_group_id"],
                "properties": {
                  "admin_id": {
                    "type": "string"
                  },
                  "permission_group_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/delete-admin": {
      "post": {
        "tags": ["admin"],
        "summary": "delete admin mod",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer ............",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/set-status": {
      "post": {
        "tags": ["admin"],
        "summary": "set status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer ...........",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body4"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/activities/{activity_id}": {
      "get": {
        "tags": ["admin"],
        "summary": "admin: get admin's activities by id",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/activities": {
      "get": {
        "tags": ["admin"],
        "summary": "admin: get admin's activities by query",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "admin_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "on_model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "admins",
                "Permissions",
                "admin_banks",
                "s_banner",
                "s_company",
                "s_category",
                "s_revenue",
                "s_comment",
                "s_deposit_withdraw",
                "s_lucky_shopping",
                "s_product",
                "s_order",
                "s_promotion",
                "s_report"
              ]
            }
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_action_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission/admin/create-new": {
      "post": {
        "tags": ["permission"],
        "summary": "permission : create new",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer ............",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code", "name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission/admin/get-all": {
      "get": {
        "tags": ["permission"],
        "summary": "permission : get all",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "example": "bearer .....",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission/admin/update": {
      "post": {
        "tags": ["permission"],
        "summary": "permission: update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission/admin/delete": {
      "post": {
        "tags": ["permission"],
        "summary": "permission : delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin-mod/get-admins": {
      "get": {
        "tags": ["admin-mod"],
        "summary": "get all admins",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/admin/change-password": {
      "post": {
        "tags": ["admin"],
        "summary": "admin: change password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["new_password", "old_password"],
                "properties": {
                  "new_password": {
                    "type": "string"
                  },
                  "old_password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/create-new": {
      "post": {
        "tags": ["permission-group"],
        "summary": "group permission: create new",
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/update-permission": {
      "post": {
        "tags": ["permission-group"],
        "summary": "group permission: update permission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "permissions_id"],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "permissions_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/get-groups-permissions": {
      "get": {
        "tags": ["permission-group"],
        "summary": "group permission: get all",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/get-group-permission-by-id": {
      "get": {
        "tags": ["permission-group"],
        "summary": "get group permission by id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/delete-group-permission-by-id": {
      "delete": {
        "tags": ["permission-group"],
        "summary": "delete group permission by id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/permission-group/members/{id}": {
      "get": {
        "tags": ["permission-group"],
        "summary": "permission-group: get members",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/admin/free-admin": {
      "get": {
        "tags": ["admin"],
        "summary": "admin: get free admins",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/": {
      "get": {
        "summary": "get companies",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/{id}": {
      "get": {
        "summary": "get company by id",
        "tags": ["company"],
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/company/admin": {
      "get": {
        "summary": "admin get companies",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["approved", "rejected", "pending", "disabled"]
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/admin/{id}": {
      "get": {
        "summary": "admin get a company",
        "tags": ["company"],
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/company/admin/approve": {
      "post": {
        "summary": "admin approve company",
        "tags": ["company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["approved", "rejected", "disabled"]
                  },
                  "note": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/user/like": {
      "post": {
        "summary": "user like a company",
        "tags": ["company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  },
                  "state": {
                    "type": "string",
                    "enum": ["like", "unlike"],
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/company/follow": {
      "get": {
        "summary": "company get follow",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/s_/company/user/follow": {
      "get": {
        "summary": "user get follow",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "summary": "user follow a company",
        "tags": ["company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  },
                  "state": {
                    "type": "string",
                    "enum": ["follow", "unfollow"],
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/view": {
      "post": {
        "summary": "user view a company",
        "tags": ["company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/rate": {
      "get": {
        "summary": "public route get rate of a company",
        "tags": ["company"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/user/{id}": {
      "get": {
        "tags": ["company"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/user": {
      "get": {
        "summary": "user get personal (?)",
        "tags": ["company"],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["company"],
        "summary": "user create a company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "category_id",
                  "name",
                  "representer",
                  "tax_code",
                  "phone_number",
                  "email",
                  "images",
                  "cover_image",
                  "logo",
                  "business_registration_form",
                  "online_sales"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "representer": {
                    "type": "string"
                  },
                  "cover_image": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "tax_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "example": {
                      "images": [
                        "public/uploads/s_/products/1571039354059.5d9ea88cbf370f2ff202ca5f_resized.jpg",
                        "public/uploads/s_/products/1571039354068.5d9ea88cbf370f2ff202ca5f_resized.jpg"
                      ]
                    }
                  },
                  "business_registration_form": {
                    "type": "array",
                    "example": {
                      "business_registration_form": [
                        "public/uploads/s_/products/1571039354059.5d9ea88cbf370f2ff202ca5f_resized.jpg",
                        "public/uploads/s_/products/1571039354068.5d9ea88cbf370f2ff202ca5f_resized.jpg"
                      ]
                    }
                  },
                  "category_id": {
                    "type": "string",
                    "description": "type 2"
                  },
                  "online_sales": {
                    "type": "boolean",
                    "description": "true if online and offline"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "403": {
            "description": "7001704 - user not verified or approved "
          }
        }
      }
    },
    "/s_/company/user/share": {
      "post": {
        "summary": "user share a company",
        "tags": ["company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/user/rate": {
      "get": {
        "summary": "user get personal rated company",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": ["company"],
        "summary": "user rate a company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "rate", "message"],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "string",
                    "enum": [1, 2, 3, 4]
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner": {
      "get": {
        "summary": "get banner",
        "tags": ["banner"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [1, 2, 3, 4, 5]
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner/company": {
      "get": {
        "summary": "company get banner",
        "tags": ["banner"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "approved", "disabled"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["banner"],
        "summary": "company_port banner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["image", "name", "start_time", "end_time", "position"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "string"
                  },
                  "end_time": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number",
                    "enum": [1, 2, 3, 4, 5]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner/slot": {
      "get": {
        "summary": "company get banner",
        "tags": ["banner"],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner/company/upload": {
      "post": {
        "tags": ["banner"],
        "summary": "company upload banner image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "string",
                    "maxLength": 1,
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner/company/{id}": {
      "get": {
        "tags": ["banner"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "company get banner by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["banner"],
        "summary": "company update banner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "string"
                  },
                  "end_time": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number",
                    "enum": [1, 2, 3, 4, 5]
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "disabled"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "403": {
            "description": "7001101 - banner has been approved or rejected"
          },
          "400": {
            "description": "7001102 - banner cant change status after paid"
          },
          "404": {
            "description": "7001100 - banner not found"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/banner/admin/{id}": {
      "get": {
        "tags": ["banner"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "admin get banner by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["banner"],
        "summary": "admin update banner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "string"
                  },
                  "end_time": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number",
                    "enum": [1, 2, 3, 4, 5]
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "disabled", "approved"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "404": {
            "description": "7001100 - banner not found"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/banner/{id}": {
      "get": {
        "tags": ["banner"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get banner by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/banner/admin/approve/{id}": {
      "put": {
        "tags": ["banner"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["approved", "rejected"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "summary": "admin get banner by id",
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "403": {
            "description": "7001101 - banner has been approved or rejected \n 7000610 - company dont have enough money for payment"
          }
        }
      }
    },
    "/s_/banner/admin": {
      "get": {
        "summary": "admin get banner",
        "tags": ["banner"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "approved", "disabled"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["banner"],
        "summary": "admin post banner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["image", "name", "start_time", "end_time", "position"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "string"
                  },
                  "end_time": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number",
                    "enum": [1, 2, 3, 4, 5]
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "disabled", "approved"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/category": {
      "get": {
        "tags": ["category"],
        "summary": "get category",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/category/{id}": {
      "get": {
        "tags": ["category"],
        "summary": "get category by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/category/admin/image": {
      "post": {
        "tags": ["category"],
        "summary": "upload image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "maxLength": 1,
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/category/admin": {
      "get": {
        "tags": ["category"],
        "summary": "admin get categories",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "disabled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["category"],
        "summary": "admin post a category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "status", "type"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "default": "pending",
                    "enum": ["active", "disabled", "pending"]
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "number",
                    "description": "1: danh muc cha, 2: danh muc con, 3 dong san pham",
                    "default": 1,
                    "enum": [1, 2, 3]
                  },
                  "fee_rate": {
                    "type": "number",
                    "default": 0.01,
                    "description": "type 2 only"
                  },
                  "fee_type": {
                    "type": "number",
                    "description": "type 2 only"
                  },
                  "priority": {
                    "type": "number",
                    "description": "the higher the priority"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/category/admin/{id}": {
      "get": {
        "tags": ["category"],
        "summary": "admin get category by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["category"],
        "summary": "admin update category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "number",
                    "description": "the higher the priority"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["category"],
        "summary": "admin delete category",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/category/company": {
      "post": {
        "tags": ["category"],
        "summary": "company post a category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "type"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "number",
                    "description": "1: danh muc cha, 2: danh muc con, 3 dong san pham",
                    "default": 1,
                    "enum": [1, 2, 3]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search": {
      "get": {
        "summary": "search",
        "tags": ["search"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["store", "product", "all"],
              "default": "all"
            }
          },
          {
            "name": "type_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "distance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_store",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["max_refund", "max_discount"]
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search/company/text-search": {
      "get": {
        "summary": "Company search products|stores|companies|categories|users|promotion by name.",
        "description": "Company search products|stores|companies|categories|users|promotion by name.",
        "tags": ["search"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["product", "store", "company", "category", "user", "promotion"],
              "example": "product"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "May hut bui"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name pure_name"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search/admin/text-search": {
      "get": {
        "summary": "Admin search products|stores|companies|categories|users|promotion by name.",
        "description": "Admin search products|stores|companies|categories|users|promotion by name.",
        "tags": ["search"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["product", "store", "company", "category", "user", "promotion"],
              "example": "product"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "May hut bui"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name pure_name"
            }
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "type_category_id company_category_id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search/auto-complete": {
      "get": {
        "summary": "search",
        "tags": ["search"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "10.8608434,106.7824432"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search/address": {
      "get": {
        "summary": "search",
        "tags": ["search"],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "10.8608434,106.7824432"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/search/coordinates": {
      "get": {
        "summary": "search",
        "tags": ["search"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/address/user": {
      "get": {
        "summary": "get address",
        "tags": ["address"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "add address",
        "tags": ["address"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "province": "Hồ Chí Minh",
                  "district": "Quận 6",
                  "ward": "Phường 05",
                  "text": "Hẻm 203 Phan Văn Khỏe",
                  "province_code": "79",
                  "district_code": "775",
                  "ward_code": "27361",
                  "receiver": "Đoàn Công Minh",
                  "phone_number": "0962062515",
                  "is_default": true
                },
                "properties": {
                  "province": {
                    "type": "string",
                    "required": "true"
                  },
                  "district": {
                    "type": "string",
                    "required": "true"
                  },
                  "ward": {
                    "type": "string",
                    "required": "true"
                  },
                  "province_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "district_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "ward_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "receiver": {
                    "type": "string",
                    "required": "true"
                  },
                  "phone_number": {
                    "type": "string",
                    "required": "true"
                  },
                  "is_default": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/s_/address/user/{id}": {
      "put": {
        "summary": "add address",
        "tags": ["address"],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "province": "Hồ Chí Minh",
                  "district": "Quận Thủ Đức",
                  "ward": "Phường Linh Trung",
                  "text": "KTX khu B",
                  "receiver": "Đoàn Công Minh",
                  "phone_number": "0962062515",
                  "is_default": true
                },
                "properties": {
                  "province": {
                    "type": "string",
                    "required": "true"
                  },
                  "district": {
                    "type": "string",
                    "required": "true"
                  },
                  "ward": {
                    "type": "string",
                    "required": "true"
                  },
                  "province_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "district_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "ward_code": {
                    "type": "string",
                    "required": "true"
                  },
                  "receiver": {
                    "type": "string",
                    "required": "true"
                  },
                  "phone_number": {
                    "type": "string",
                    "required": "true"
                  },
                  "is_default": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "delete address",
        "tags": ["address"],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/s_/province": {
      "get": {
        "summary": "province",
        "tags": ["province"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [1, 2, 3]
            }
          },
          {
            "name": "parent_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/store": {
      "get": {
        "tags": ["store"],
        "summary": "get stores",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "-max_refund -max_discount",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/store/nearest": {
      "get": {
        "tags": ["store"],
        "summary": "get stores sort by distance",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/store/{id}": {
      "get": {
        "tags": ["store"],
        "summary": "get store by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/store/admin": {
      "get": {
        "tags": ["store"],
        "summary": "admin get stores",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "disabled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/store/admin/{id}": {
      "get": {
        "tags": ["store"],
        "summary": "admin get a store by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/store/company": {
      "get": {
        "tags": ["store"],
        "summary": "company get store",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["store"],
        "summary": "company create a store",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["address", "location", "name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "province": {
                        "type": "string"
                      },
                      "district": {
                        "type": "string"
                      },
                      "ward": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "manager_name": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "province": "Hồ Chí Minh",
                      "district": "Quận 12",
                      "ward": "Phường 11",
                      "ward_code": "3447",
                      "district_code": "5433",
                      "province_code": "79",
                      "text": "48 Bình Phú"
                    }
                  },
                  "location": {
                    "type": "string",
                    "example": "1.23456789,2.2345678"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "disabled"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/store/user/{id}": {
      "get": {
        "tags": ["store"],
        "summary": "user get personal by id (?)",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["store"],
        "summary": "user update a store",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "province": {
                        "type": "string"
                      },
                      "district": {
                        "type": "string"
                      },
                      "ward": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "manager_name": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "province": "Hồ Chí Minh",
                      "district": "Quận 12",
                      "ward": "Phường 11",
                      "ward_code": "3447",
                      "district_code": "5433",
                      "province_code": "79",
                      "text": "48 Bình Phú"
                    }
                  },
                  "location": {
                    "type": "string",
                    "example": "1.23456789,2.2345678"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "disabled"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/product/{id}": {
      "get": {
        "tags": ["product"],
        "summary": "get product by id",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/product/transport-fee": {
      "get": {
        "tags": ["product"],
        "summary": "get transport fee",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 200,
                  "data": [
                    {
                      "_id": "5ebf464e6dee723987436511",
                      "location": {
                        "type": "Point",
                        "coordinates": [106.80092, 10.85846]
                      },
                      "is_default": true,
                      "user_id": "5e5f2a19ee81e04d90580998",
                      "province": "Hồ Chí Minh",
                      "district": "Quận 10",
                      "ward": "Phường 11",
                      "ward_code": "3447",
                      "district_code": "5433",
                      "province_code": "79",
                      "text": "Nam Cao",
                      "receiver": "Đoàn Công Minh",
                      "phone_number": "0962062515",
                      "createdAt": "2020-05-16T01:47:58.582Z",
                      "updatedAt": "2020-05-16T01:47:58.582Z",
                      "__v": 0,
                      "transport_fees": [
                        {
                          "provider": "ghn",
                          "fee": 23100,
                          "original_fee": 30800,
                          "display_name": "Giao hàng nhanh"
                        }
                      ]
                    },
                    {
                      "_id": "5eba2780730394605442202b",
                      "location": {
                        "type": "Point",
                        "coordinates": [106.7709173, 10.8296978]
                      },
                      "is_default": false,
                      "user_id": "5e5f2a19ee81e04d90580998",
                      "province": "Hồ Chí Minh",
                      "district": "Quận 8",
                      "ward": "Phường Phước Long B",
                      "text": "48 Đường Tăng Nhơn Phú",
                      "province_code": "79",
                      "district_code": "775",
                      "ward_code": "27361",
                      "receiver": "Đoàn Công Minh",
                      "phone_number": "0962062515",
                      "createdAt": "2020-05-12T04:35:12.994Z",
                      "updatedAt": "2020-05-16T01:47:58.583Z",
                      "__v": 0,
                      "transport_fees": [{}]
                    },
                    {
                      "_id": "5eba27a2730394605442203a",
                      "location": {
                        "type": "Point",
                        "coordinates": [106.7709173, 10.8296978]
                      },
                      "is_default": false,
                      "user_id": "5e5f2a19ee81e04d90580998",
                      "province": "Hồ Chí Minh",
                      "district": "Quận 9",
                      "ward": "Phường Phước Long B",
                      "text": "48 Đường Tăng Nhơn Phú",
                      "province_code": "79",
                      "district_code": "775",
                      "ward_code": "27361",
                      "receiver": "Đoàn Công Minh",
                      "phone_number": "0962062515",
                      "createdAt": "2020-05-12T04:35:46.689Z",
                      "updatedAt": "2020-05-12T04:35:46.689Z",
                      "__v": 0,
                      "transport_fees": [
                        {
                          "provider": "ghn",
                          "fee": 28050,
                          "original_fee": 37400,
                          "display_name": "Giao hàng nhanh"
                        }
                      ]
                    }
                  ],
                  "valid_discounts": [
                    {
                      "status": "active",
                      "_id": "5ebf45506dee7239874364f7",
                      "order_value": 50000,
                      "discount_rate": 1
                    },
                    {
                      "status": "active",
                      "_id": "5ebf45576dee7239874364fb",
                      "order_value": 25000,
                      "discount_rate": 0.5
                    },
                    {
                      "status": "active",
                      "_id": "5ebf45746dee723987436500",
                      "order_value": 5000,
                      "discount_rate": 0.25
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/s_/product/admin": {
      "get": {
        "tags": ["product"],
        "summary": "admin get product",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["approved", "disabled", "pending", "rejected"]
            }
          },
          {
            "name": "group_product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/admin/{id}": {
      "get": {
        "tags": ["product"],
        "summary": "admin get product by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/product/admin/approve": {
      "post": {
        "tags": ["product"],
        "summary": "admin approve product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["approved", "rejected"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/user/like/": {
      "post": {
        "tags": ["product"],
        "summary": "user like product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  },
                  "state": {
                    "type": "string",
                    "enum": ["like", "unlike"],
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/": {
      "get": {
        "tags": ["product"],
        "summary": "get product",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_lucky",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sale_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/top": {
      "get": {
        "tags": ["product"],
        "summary": "get top product by category",
        "parameters": [
          {
            "name": "category_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "category_id1,category_id2...."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "enum": [1, 2, 3]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/user/share/": {
      "post": {
        "tags": ["product"],
        "summary": "user share product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/view/": {
      "post": {
        "tags": ["product"],
        "summary": "user view product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/user/favorite/": {
      "get": {
        "summary": "user get favorite",
        "tags": ["product"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": ["product"],
        "summary": "user favorite product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "required": "true"
                  },
                  "state": {
                    "type": "string",
                    "required": "true",
                    "enum": ["favorite", "unfavorite"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/user/view/": {
      "get": {
        "summary": "user get views",
        "tags": ["product"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/s_/product/company/{id}/": {
      "get": {
        "tags": ["product"],
        "summary": "company get product by id",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["product"],
        "summary": "company update product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": "8",
                    "maxLength": "256",
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "minLength": "80",
                    "maxLength": "3096"
                  },
                  "price": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["disabled", "pending"]
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "images": {
                    "type": "string"
                  },
                  "refund_rate": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1
                  },
                  "stock": {
                    "type": "object",
                    "description": "{[store_id]: stock}"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "transportable": {
                    "description": "if transport packing_fields is required",
                    "type": "boolean"
                  },
                  "packaging_width": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_height": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_length": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_weight": {
                    "description": "gram",
                    "type": "string"
                  },
                  "category_id": {
                    "type": "string",
                    "description": "type >= 2"
                  },
                  "is_free_transport": {
                    "type": "boolean"
                  },
                  "is_limited_stock": {
                    "type": "boolean"
                  },
                  "SKU": {
                    "type": "string"
                  },
                  "warranty_information": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/product/company/stock/": {
      "put": {
        "tags": ["product"],
        "summary": "stock in, stock out productStoring. [This API will be removed in future, use /s_/product-storing/company/update-stock instead]",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productStorings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "stock": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "productStorings": [
                    {
                      "id": "5e96b37a1181235f7514abf7",
                      "stock": 70000
                    },
                    {
                      "id": "5e96b37a1181235f7514abf1",
                      "stock": -5000
                    },
                    {
                      "id": "5e96b37a1181235f7514abf6",
                      "stock": 70000
                    }
                  ]
                }
              }
            },
            "required": true
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.productNotExist': 7001300, 'client.stockCannotBeNegative': 7001303"
          }
        }
      }
    },
    "/s_/product/company/stock/request-move": {
      "post": {
        "tags": ["product"],
        "summary": "Request move product stock from store A to store B. [This API will be removed soon, use /s_/product-storing/company/request-move-stock instead]",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "required": true
                  },
                  "from_store_id": {
                    "type": "string",
                    "required": true
                  },
                  "to_store_id": {
                    "type": "string",
                    "required": true
                  },
                  "stock": {
                    "type": "number",
                    "required": true
                  }
                },
                "example": {
                  "product_id": "5e7494bf6bd99e6a93fb2bff",
                  "from_store_id": "5e74812f6bd99e6a93faf90d",
                  "to_store_id": "5e7481556bd99e6a93fafb77",
                  "stock": 1
                }
              }
            }
          }
        }
      }
    },
    "/s_/product/company/stock/confirm-move": {
      "put": {
        "tags": ["product"],
        "summary": "Confirm/cancel move product stock from store A to store B. [This API will be removed soon, use /s_/product-storing/company/confirm-move-stock instead]",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_stock_history_id": {
                    "type": "string",
                    "required": true
                  },
                  "status": {
                    "type": "string",
                    "required": true,
                    "enum": ["completed", "cancelled"]
                  },
                  "stock": {
                    "type": "number",
                    "description": "uses this fields if the quantity of received product was not equals the requested quantity"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_stock_history_id": "5f0d35ae6c7576412cf80ad6",
                  "status": "completed",
                  "stock": 2,
                  "note": "1/3 san pham bi hu, chi nhan 2 san pham"
                }
              }
            }
          }
        }
      }
    },
    "/s_/product-stock-history/company/get-history/{history_id}": {
      "get": {
        "tags": ["product-stock-history"],
        "summary": "Get stock history by id.",
        "description": "Get stock history by id.",
        "parameters": [
          {
            "name": "history_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "from_store",
                "to_store",
                "from_product_storing",
                "to_product_storing",
                "product",
                "performed_by",
                "user",
                "transaction"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-stock-history/company/get-histories": {
      "get": {
        "tags": ["product-stock-history"],
        "summary": "Get stock histories",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "from_store",
                "to_store",
                "from_product_storing",
                "to_product_storing",
                "product",
                "performed_by",
                "user",
                "transaction"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["import", "export", "sell", "refund", "move"]
            }
          },
          {
            "name": "requester_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["stock", "store"]
            }
          },
          {
            "name": "moving_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["stock_to_store", "store_to_stock", "store_to_store"]
            }
          },
          {
            "name": "relate_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["stock", "store", "both"],
              "example": "stock both"
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },

          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "handled_by_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approved_by_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "cancelled", "approved"]
            }
          },
          {
            "name": "need_approved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/s_/setting/company": {
      "get": {
        "tags": ["setting"],
        "summary": "company get company setting",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["setting"],
        "summary": "company post a setting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "can_order_without_product": {
                    "type": "boolean"
                  },
                  "transport_fee": {
                    "deprecated": true,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "number",
                          "minimum": 0
                        },
                        "to": {
                          "type": "number",
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "opening_days": {
                    "type": "object",
                    "properties": {
                      "monday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "tuesday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "wednesday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "thursday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "friday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "saturday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      },
                      "sunday": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 0
                          },
                          "to": {
                            "type": "number",
                            "minimum": 0
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "notification": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "number",
                        "minimum": 0
                      },
                      "to": {
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  },
                  "order_without_product_rate": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "first item must start at 0",
                      "properties": {
                        "from": {
                          "type": "number",
                          "minimum": 0
                        },
                        "refund_rate": {
                          "type": "number",
                          "minimum": 0
                        },
                        "discount_rate": {
                          "type": "number",
                          "minimum": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'number.startAtZero': 4000801"
          }
        }
      }
    },
    "/s_/setting/company/discount-transport": {
      "post": {
        "tags": ["setting"],
        "summary": "company update a discount-transport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "maximum 3 discount",
                "properties": {
                  "providers": {
                    "type": "array"
                  },
                  "order_value": {
                    "type": "number",
                    "minimum": 0
                  },
                  "discount_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "example": {
                  "providers": ["ghn"],
                  "order_value": 100000,
                  "discount_rate": 0.5
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.logisticsIsNotValid': 7002308, client.companyDiscountTransportNumber': 7002307, 'client.companyDiscountTransportMin': 7002309"
          }
        }
      },
      "put": {
        "tags": ["setting"],
        "summary": "company post a discount-transport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providers": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "disabled"]
                  },
                  "_id": {
                    "type": "string"
                  },
                  "order_value": {
                    "type": "number",
                    "minimum": 0
                  },
                  "discount_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "example": {
                  "status": "active",
                  "providers": ["ghn"],
                  "_id": "5e9195fe1db1550c8913f626",
                  "order_value": 50000,
                  "discount_rate": 0.25
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.logisticsIsNotValid': 7002308, 'client.global.notFound': 7002400"
          }
        }
      },
      "delete": {
        "tags": ["setting"],
        "summary": "company remove a discount-transport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                },
                "example": {
                  "_id": "5e9195fe1db1550c8913f626"
                }
              }
            }
          },
          "required": true
        }
      },
      "responses": {
        "200": {
          "description": "Status 200"
        }
      }
    },
    "/s_/setting/": {
      "get": {
        "tags": ["setting"],
        "summary": "company setting",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "company_id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/promotion/user/{id}": {
      "get": {
        "tags": ["promotion"],
        "summary": "Get by promotion id",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_storing_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/promotion/user/": {
      "get": {
        "tags": ["promotion"],
        "summary": "Get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_storing_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status_date",
            "in": "query",
            "required": false,
            "description": "waiting, running, overed",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "active, disable",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "product store company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion/owner/": {
      "get": {
        "tags": ["promotion"],
        "summary": "get owner promotions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_storing_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["handling", "pending", "active", "expired", "disabled"]
            }
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "product store company"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "createdAt query by this params"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "createdAt query by this params"
          },
          {
            "name": "start_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "find promotions, what has start_at end expire_at in this period time"
          },
          {
            "name": "expire_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "find promotions, what has start_at end expire_at in this period time"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["promotion"],
        "summary": "create owner promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "description",
                  "expires_at",
                  "name",
                  "product_scop",
                  "product_storing_ids",
                  "refund",
                  "starts_at",
                  "store_scop",
                  "total",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "max length is 30 characters"
                  },
                  "description": {
                    "type": "string",
                    "description": "max length is 3000 characters"
                  },
                  "value": {
                    "type": "number",
                    "description": "between 0 - 0.99"
                  },
                  "refund": {
                    "type": "number"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date",
                    "description": "iso date string"
                  },
                  "expire_at": {
                    "type": "string",
                    "description": "is date string"
                  },
                  "product_scope": {
                    "type": "string",
                    "description": "all, partial"
                  },
                  "unlimit": {
                    "type": "boolean",
                    "description": "required when product scope is all"
                  },
                  "total": {
                    "type": "number",
                    "description": "required when unlimit is true"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "limited": {
                          "type": "boolean"
                        },
                        "total": {
                          "type": "number",
                          "description": "required when limited is false"
                        }
                      }
                    },
                    "description": "required when product scope is partial"
                  },
                  "store_id": {
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "min-quantity | max-payment"
                        },
                        "value": {
                          "type": "string",
                          "description": "required when type is existed"
                        }
                      }
                    }
                  },
                  "max_discount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion/owner/{id}": {
      "get": {
        "tags": ["promotion"],
        "summary": "get owner protion by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/promotion/owner/disabled": {
      "put": {
        "tags": ["promotion"],
        "summary": "disabled promotion",
        "description": "disabled promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["promotion_id"],
                "properties": {
                  "promotion_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.global.notFound':7002400"
          }
        }
      }
    },
    "/s_/promotion/v2/company/": {
      "post": {
        "tags": ["promotion v2"],
        "summary": "create owner promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "description",
                  "expire_at",
                  "name",
                  "product_scope",
                  "refund",
                  "start_at",
                  "store_scope",
                  "total",
                  "value",
                  "store_id"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "max length is 30 characters"
                  },
                  "description": {
                    "type": "string",
                    "description": "max length is 3000 characters"
                  },
                  "value": {
                    "type": "number",
                    "description": "between 0 - 0.99"
                  },
                  "refund": {
                    "type": "number"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date",
                    "description": "iso date string"
                  },
                  "expire_at": {
                    "type": "string",
                    "description": "is date string"
                  },
                  "product_scope": {
                    "type": "string",
                    "description": "all, partial"
                  },
                  "unlimit": {
                    "type": "boolean",
                    "description": "required when product scope is all"
                  },
                  "total": {
                    "type": "number",
                    "description": "required when unlimit is false"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "limited": {
                          "type": "boolean"
                        },
                        "total": {
                          "type": "number",
                          "description": "required when limited is false"
                        }
                      }
                    },
                    "description": "required when product scope is partial"
                  },
                  "store_id": {
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "min-quantity | max-payment"
                        },
                        "value": {
                          "type": "string",
                          "description": "required when type is existed"
                        }
                      }
                    }
                  },
                  "max_discount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["promotion v2"],
        "summary": "create owner promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "promotion_id",
                  "store_id",
                  "expire_at",
                  "start_at",
                  "product_scope",
                  "refund",
                  "total",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "max length is 30 characters"
                  },
                  "description": {
                    "type": "string",
                    "description": "max length is 3000 characters"
                  },
                  "value": {
                    "type": "number",
                    "description": "between 0 - 0.99"
                  },
                  "refund": {
                    "type": "number"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date",
                    "description": "iso date string"
                  },
                  "expire_at": {
                    "type": "string",
                    "description": "is date string"
                  },
                  "product_scope": {
                    "type": "string",
                    "description": "all, partial"
                  },
                  "unlimit": {
                    "type": "boolean",
                    "description": "required when product scope is all"
                  },
                  "total": {
                    "type": "number",
                    "description": "required when unlimit is false"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "limited": {
                          "type": "boolean"
                        },
                        "total": {
                          "type": "number",
                          "description": "required when limited is false"
                        }
                      }
                    },
                    "description": "required when product scope is partial"
                  },
                  "store_id": {
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "min-quantity | max-payment"
                        },
                        "value": {
                          "type": "string",
                          "description": "required when type is existed"
                        }
                      }
                    }
                  },
                  "max_discount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion/v2/company/status": {
      "put": {
        "tags": ["promotion v2"],
        "summary": "create owner promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["promotion_id", "status"],
                "properties": {
                  "promotion_id": {
                    "type": "string"
                  },
                  "status": {
                    "schema": {
                      "type": "string",
                      "valid": "active, disabled"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/user/": {
      "get": {
        "tags": ["promotion"],
        "summary": "get user's prmotion-code",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["promotion"],
        "summary": "create promotion-code by  user",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/user/{id}": {
      "get": {
        "tags": ["promotion_code"],
        "summary": "get promotion of user by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/promotion-code/user/used": {},
    "/s_/promotion-code/owner/": {
      "get": {
        "tags": ["promotion_code"],
        "summary": "promotion code: owner get",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/admin/": {
      "get": {
        "tags": ["promotion_code"],
        "summary": "promotion-code: admin get",
        "description": "if promotion_id is null, server will response all dataa",
        "parameters": [
          {
            "name": "promotion_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/user": {
      "get": {
        "tags": ["cart"],
        "summary": "user get cart",
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "delivery_address": {
                    "province": "Hồ Chí Minh",
                    "district": "Quận 9",
                    "ward": "Phường Phước Long B",
                    "text": "Hẻm 203 Phan Văn Khỏe",
                    "receiver": "Đoàn Công Minh",
                    "phone_number": "0962062515",
                    "normalizedAddress": "Hẻm 203 Phan Văn Khỏe, Phường Phước Long B, Quận 9, Hồ Chí Minh",
                    "address_id": "5e9185ace45132738dbb7702"
                  },
                  "is_confirmed": true,
                  "is_checkouted": true,
                  "_id": "5e99790696b743651939da05",
                  "user_id": "5e5f2a19ee81e04d90580998",
                  "__v": 1,
                  "code": "Q8XERQWF3S",
                  "createdAt": "2020-04-17T09:38:14.082Z",
                  "orders": [
                    {
                      "logistics_available": [],
                      "products": [
                        {
                          "quantity": 2,
                          "_id": "5e96b3901181235f7514abfb",
                          "id": "5e96b3901181235f7514abfa",
                          "company_id": "5e8d3b517494ba5fc6c75bd8",
                          "discount": 0,
                          "discount_rate": 0,
                          "final_price": 30000,
                          "original_price": 30000,
                          "original_total": 60000,
                          "refund": 3000,
                          "refund_rate": 0.1,
                          "store_id": "5e8d3c4e0eaf9b608f031c3a",
                          "total": 60000,
                          "total_discount": 0,
                          "total_refund": 6000,
                          "true_total_refund": 5400,
                          "true_refund_rate": 0.09
                        }
                      ],
                      "_id": "5e8d3b517494ba5fc6c75bd8",
                      "company_id": "5e8d3b517494ba5fc6c75bd8",
                      "calculated_transport_fee": 37400,
                      "is_discount_transport": true,
                      "logistics_info": {
                        "FromDistrictID": 1454,
                        "ToDistrictID": 1451,
                        "Weight": 20,
                        "Length": 20,
                        "Width": 20,
                        "Height": 20,
                        "FromWardCode": "21201",
                        "ToWardCode": "20909",
                        "ServiceID": 53320
                      },
                      "logistics_provider": "ghn",
                      "original_total": 60000,
                      "store_id": "5e8d3c4e0eaf9b608f031c3a",
                      "total": 88050,
                      "total_discount": 0,
                      "total_refund": 6000,
                      "transport_fee": 28050,
                      "store_address": {
                        "province": "Hồ Chí Minh",
                        "district": "Quận 12",
                        "ward": "Phường An Phú Đông",
                        "ward_code": "3447",
                        "district_code": "5433",
                        "province_code": "79",
                        "text": "48 Bình Phú",
                        "normalizedAddress": "48 Bình Phú, Phường An Phú Đông, Quận 12, Hồ Chí Minh"
                      },
                      "true_total_refund": 5400,
                      "id": "5e8d3b517494ba5fc6c75bd8"
                    }
                  ],
                  "updatedAt": "2020-04-17T09:43:46.246Z",
                  "payment_method": "WALLET",
                  "is_paid": true,
                  "original_total": 60000,
                  "total": 88050,
                  "total_discount": 0,
                  "total_refund": 6000,
                  "total_transport_fee": 28050,
                  "true_total_refund": 5400
                }
              }
            }
          }
        }
      }
    },
    "/s_/cart/user/lucky": {
      "post": {
        "tags": ["cart", "lucky-shopping"],
        "summary": "user get lucky cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "has_promotion": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock"
          },
          "403": {
            "description": "'client.productIsNotTransportable': 7002303 \n 'client.companyNotExist': 7000100 \n 'client.logisticsIsUnavailable': 7002302"
          }
        }
      }
    },
    "/s_/cart/user/lucky/confirm": {
      "post": {
        "tags": ["cart", "lucky-shopping"],
        "summary": "user confirm lucky cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "address_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock 'client.addressNotFound': 7001411, 'client.companyNotExist': 7000100"
          }
        }
      },
      "delete": {
        "tags": ["cart"],
        "summary": "user remove product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/user/product": {
      "post": {
        "tags": ["cart"],
        "summary": "user add product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "has_promotion": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock"
          },
          "403": {
            "description": "'client.productIsNotTransportable': 7002303 \n 'client.companyNotExist': 7000100 \n 'client.logisticsIsUnavailable': 7002302"
          }
        }
      },
      "delete": {
        "tags": ["cart"],
        "summary": "user remove product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/user/checkout": {
      "post": {
        "tags": ["cart"],
        "summary": "user checkout cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": {
                    "type": "string"
                  },
                  "payment_method": {
                    "type": "string",
                    "enum": ["WALLET", "COD", "VNPAY"]
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "logistics_provider": { "type": "string" },
                      "company_id": { "type": "string" },
                      "store_id": { "type": "string" },
                      "is_received_at_store": { "type": "boolean" },
                      "expected_received_date": { "type": "string" },
                      "note": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.cartNotExist': 7001409\n 'client.cartIsEmpty': 7001403 \n 'client.addressNotFound': 7001411 \n"
          },
          "403": {
            "description": "'client.logisticsIsUnavailable': 7002302 \n, client.orderCanOnlyReceivedAtStore': 7001423"
          }
        }
      }
    },
    "/s_/cart/user/confirm": {
      "post": {
        "tags": ["cart"],
        "summary": "user confirm cart",
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.cartNotExist': 7001409\n 'client.cartNotCheckouted': 7001402\n 'client.companyNotExist': 7000100 "
          },
          "403": {
            "description": "'client.MoneyNotEnough': 7000610 \n'client.RefundFundNotEnough': 7000611"
          }
        }
      }
    },
    "/s_/cart/v2/user": {
      "get": {
        "tags": ["cart-v2"],
        "summary": "user get cart",
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "delivery_address": {
                    "province": "Hồ Chí Minh",
                    "district": "Quận 9",
                    "ward": "Phường Phước Long B",
                    "text": "Hẻm 203 Phan Văn Khỏe",
                    "receiver": "Đoàn Công Minh",
                    "phone_number": "0962062515",
                    "normalizedAddress": "Hẻm 203 Phan Văn Khỏe, Phường Phước Long B, Quận 9, Hồ Chí Minh",
                    "address_id": "5e9185ace45132738dbb7702"
                  },
                  "is_confirmed": true,
                  "is_checkouted": true,
                  "_id": "5e99790696b743651939da05",
                  "user_id": "5e5f2a19ee81e04d90580998",
                  "__v": 1,
                  "code": "Q8XERQWF3S",
                  "createdAt": "2020-04-17T09:38:14.082Z",
                  "orders": [
                    {
                      "logistics_available": [],
                      "products": [
                        {
                          "quantity": 2,
                          "_id": "5e96b3901181235f7514abfb",
                          "id": "5e96b3901181235f7514abfa",
                          "company_id": "5e8d3b517494ba5fc6c75bd8",
                          "discount": 0,
                          "discount_rate": 0,
                          "final_price": 30000,
                          "original_price": 30000,
                          "original_total": 60000,
                          "refund": 3000,
                          "refund_rate": 0.1,
                          "store_id": "5e8d3c4e0eaf9b608f031c3a",
                          "total": 60000,
                          "total_discount": 0,
                          "total_refund": 6000,
                          "true_total_refund": 5400,
                          "true_refund_rate": 0.09
                        }
                      ],
                      "_id": "5e8d3b517494ba5fc6c75bd8",
                      "company_id": "5e8d3b517494ba5fc6c75bd8",
                      "calculated_transport_fee": 37400,
                      "is_discount_transport": true,
                      "logistics_info": {
                        "FromDistrictID": 1454,
                        "ToDistrictID": 1451,
                        "Weight": 20,
                        "Length": 20,
                        "Width": 20,
                        "Height": 20,
                        "FromWardCode": "21201",
                        "ToWardCode": "20909",
                        "ServiceID": 53320
                      },
                      "logistics_provider": "ghn",
                      "original_total": 60000,
                      "store_id": "5e8d3c4e0eaf9b608f031c3a",
                      "total": 88050,
                      "total_discount": 0,
                      "total_refund": 6000,
                      "transport_fee": 28050,
                      "store_address": {
                        "province": "Hồ Chí Minh",
                        "district": "Quận 12",
                        "ward": "Phường An Phú Đông",
                        "ward_code": "3447",
                        "district_code": "5433",
                        "province_code": "79",
                        "text": "48 Bình Phú",
                        "normalizedAddress": "48 Bình Phú, Phường An Phú Đông, Quận 12, Hồ Chí Minh"
                      },
                      "true_total_refund": 5400,
                      "id": "5e8d3b517494ba5fc6c75bd8"
                    }
                  ],
                  "updatedAt": "2020-04-17T09:43:46.246Z",
                  "payment_method": "WALLET",
                  "is_paid": true,
                  "original_total": 60000,
                  "total": 88050,
                  "total_discount": 0,
                  "total_refund": 6000,
                  "total_transport_fee": 28050,
                  "true_total_refund": 5400
                }
              }
            }
          }
        }
      }
    },
    "/s_/cart/v2/user/product-store": {
      "get": {
        "tags": ["cart-v2"],
        "summary": "user get stores",
        "parameters": [
          {
            "name": "product_id",
            "required": true,
            "type": "string",
            "in": "query"
          },
          {
            "name": "location",
            "required": false,
            "type": "string",
            "in": "query",
            "example": "lat,long"
          },
          {
            "name": "company_id",
            "required": true,
            "type": "string",
            "in": "query"
          },
          {
            "name": "address_id",
            "required": false,
            "type": "string",
            "in": "query"
          },
          {
            "name": "is_received_at_store",
            "required": false,
            "type": "boolean",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/v2/user/lucky": {
      "post": {
        "tags": ["cart-v2", "lucky-shopping"],
        "summary": "user get lucky cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "has_promotion": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock"
          },
          "403": {
            "description": "'client.productIsNotTransportable': 7002303 \n 'client.companyNotExist': 7000100 \n 'client.logisticsIsUnavailable': 7002302"
          }
        }
      }
    },
    "/s_/cart/v2/user/lucky/confirm": {
      "post": {
        "tags": ["cart-v2", "lucky-shopping"],
        "summary": "user confirm lucky cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "address_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock 'client.addressNotFound': 7001411, 'client.companyNotExist': 7000100"
          }
        }
      },
      "delete": {
        "tags": ["cart-v2"],
        "summary": "user remove product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/v2/user/product": {
      "post": {
        "tags": ["cart-v2"],
        "summary": "user add product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "company_id"],
                "properties": {
                  "product_storing_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string",
                    "default": "1"
                  },
                  "has_promotion": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001300 - product not found \n 7001416 - store out of stock"
          },
          "403": {
            "description": "'client.productIsNotTransportable': 7002303 \n 'client.companyNotExist': 7000100 \n 'client.logisticsIsUnavailable': 7002302"
          }
        }
      },
      "delete": {
        "tags": ["cart-v2"],
        "summary": "user remove product to cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["product_storing_id", "store_id"],
                "properties": {
                  "product_storing_id": {
                    "type": "string"
                  },
                  "store_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/v2/user/checkout": {
      "post": {
        "tags": ["cart-v2"],
        "summary": "user checkout cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": {
                    "type": "string"
                  },
                  "payment_method": {
                    "type": "string",
                    "enum": ["WALLET", "COD", "VNPAY"]
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "logistics_provider": { "type": "string" },
                      "store_id": { "type": "string" },
                      "is_received_at_store": { "type": "boolean" },
                      "expected_received_date": { "type": "string" },
                      "note": { "type": "string" }
                    }
                  },
                  "change_store": {
                    "type": "object",
                    "properties": {
                      "product_storing_id": { "type": "string" },
                      "from_store_id": { "type": "string" },
                      "to_store_id": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.cartNotExist': 7001409\n 'client.cartIsEmpty': 7001403 \n 'client.addressNotFound': 7001411 \n"
          },
          "403": {
            "description": "'client.logisticsIsUnavailable': 7002302 \n, client.orderCanOnlyReceivedAtStore': 7001423"
          }
        }
      }
    },
    "/s_/cart/v2/user/confirm": {
      "post": {
        "tags": ["cart-v2"],
        "summary": "user confirm cart",
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.cartNotExist': 7001409\n 'client.cartNotCheckouted': 7001402\n 'client.companyNotExist': 7000100 "
          },
          "403": {
            "description": "'client.MoneyNotEnough': 7000610 \n'client.RefundFundNotEnough': 7000611"
          }
        }
      }
    },
    "/s_/order/user": {
      "get": {
        "tags": ["order"],
        "summary": "user get personal order",
        "parameters": [
          {
            "name": "is_received_at_store",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "ready"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "object"
                    },
                    "store_id": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "seller_id": {
                      "type": "string"
                    },
                    "cashier_id": {
                      "type": "string"
                    },
                    "user_name": {
                      "type": "string"
                    },
                    "original_total": {
                      "type": "string"
                    },
                    "total": {
                      "type": "string",
                      "valid": "_3month, _6month, _12month"
                    },
                    "transport_fee": {
                      "type": "number"
                    },
                    "discount_rate": {
                      "type": "number"
                    },
                    "total_discount": {
                      "type": "number"
                    },
                    "refund_rate": {
                      "type": "number"
                    },
                    "total_refund": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "without_product": {
                      "type": "boolean"
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "delivery_address": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "promotion_code": {
                      "type": "string"
                    },
                    "promotion_id": {
                      "type": "string"
                    },
                    "is_paid": {
                      "type": "boolean"
                    },
                    "total_service_fee": {
                      "type": "number"
                    },
                    "reason_canceled": {
                      "type": "string"
                    },
                    "reason_reject": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["order"],
        "description": "company create order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["store_id", "company_id", "products"],
                "properties": {
                  "store_id": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "products": {
                    "type": "array",
                    "example": [
                      {
                        "product_storing_id": "5e96b3901181235f7514abfb",
                        "quantity": 1,
                        "note": "more sugar"
                      }
                    ]
                  },
                  "position": { "type": "string", "example": "B1" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          },
          "400": {
            "description": "'client.productNotExist': 7001300, 'client.menuIsEmpty': 7001420, 'client.outOfStock': 7001416,"
          }
        }
      }
    },
    "/s_/order/user/count-status": {
      "get": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "handling,picking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/order/user/{code}": {
      "get": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001414 - order cant cancel by limit cancel \n 7001415 - order cant cancel by status != pending or handling"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status", "reason_canceled"],
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "reason_canceled": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/order/user/pay/{code}": {
      "post": {
        "description": "user pay by scanning QR",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_method": {
                    "type": "string",
                    "enum": ["WALLET", "CASH"],
                    "default": "WALLET"
                  }
                }
              }
            }
          }
        },
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/order/user/offline/confirm/{code}": {
      "post": {
        "tags": ["order"],
        "summary": "user confirm postpaid order",
        "description": "user confirm postpaid order",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["note"],
                "properties": {
                  "note": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "confirm successfully"
          }
        }
      }
    },
    "/s_/order/user/offline/get-unconfirmed": {
      "get": {
        "tags": ["order"],
        "summary": "User get unconfirmed orders from store.",
        "description": "User get unconfirmed orders from store.",
        "parameters": [
          {
            "name": "store_id",
            "schema": {
              "type": "string",
              "example": "5f6afc74642f45b824909143"
            },
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "schema": {
              "type": "number",
              "default": 20
            },
            "in": "query"
          },
          {
            "name": "select",
            "schema": {
              "type": "string",
              "example": "type status products position code createdAt"
            },
            "in": "query"
          },
          {
            "name": "sort",
            "schema": {
              "type": "string",
              "example": "-createdAt"
            },
            "in": "query"
          },
          {
            "name": "populate",
            "schema": {
              "type": "string",
              "example": "company store promotion"
            },
            "in": "query"
          },
          {
            "name": "page",
            "schema": {
              "type": "number",
              "example": 20
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok!"
          }
        }
      }
    },
    "/s_/order/user/offline/confirm-and-pay/{code}": {
      "post": {
        "tags": ["order"],
        "summary": "user confirm and pay for prepaid order",
        "description": "user confirm and pay for prepaid order",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["payment_method", "note"],
                "properties": {
                  "payment_method": {
                    "type": "string",
                    "enum": ["CASH", "WALLET", "VNPAY"]
                  },
                  "note": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "confirm and pay successfully"
          }
        }
      }
    },
    "/s_/order/company/pay/{code}": {
      "post": {
        "description": "user pay by scanning QR",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["payment_method", "payment_code"],
                "properties": {
                  "payment_method": {
                    "type": "string",
                    "enum": ["CASH", "WALLET"]
                  },
                  "payment_code": {
                    "type": "number"
                  },
                  "phone_number": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/order/company": {
      "get": {
        "tags": ["order"],
        "summary": "company get company's order",
        "parameters": [
          {
            "name": "is_received_at_store",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "ready"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "user_canceled",
                "company_canceled",
                "handling",
                "picking",
                "delivering",
                "delivered",
                "user_rejected"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["online", "offline"]
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staff_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["order"],
        "description": "company create order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["without_product"],
                "properties": {
                  "without_product": {
                    "type": "boolean"
                  },
                  "note": {
                    "type": "string"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "when you are company owner"
                  },
                  "total": {
                    "type": "number",
                    "description": "if withoutproduct true"
                  },
                  "products": {
                    "type": "array",
                    "example": [
                      {
                        "product_storing_id": "5d9f58a9910aa81e92961800",
                        "quantity": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/order/company/v2": {
      "get": {
        "tags": ["order"],
        "summary": "company get company's order",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "without_product",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "picking",
                "user_canceled",
                "company_canceled",
                "handling",
                "delivering",
                "delivered",
                "user_rejected"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["online", "offline"]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_created_from_menu",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "progress_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "ready"]
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_confirmed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_paid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "seller_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cashier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "timestamp"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "timestamp"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "timestamp"
            }
          },
          {
            "name": "is_received_at_store",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_order/user/confirm-received/{code}": {
      "post": {
        "description": "user confirm order is received",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path"
          }
        ],
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/order/company/{code}": {
      "get": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001410 cant change status"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["company_canceled", "delivered", "user_rejected"]
                  },
                  "progress_status": {
                    "type": "string",
                    "enum": ["ready"]
                  },
                  "reason_canceled": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/order/company/confirm": {
      "post": {
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "7001410 cant change status"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code"],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "order code"
                  },
                  "note": {
                    "type": "string",
                    "description": "note for customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/order/company/offline/confirm": {
      "post": {
        "tags": ["order"],
        "description": "company confirms client's offline order",
        "summary": "company confirms client's offline order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code", "note"],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "order code"
                  },
                  "note": {
                    "type": "string",
                    "description": "note for customer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "confirm client's order successfully"
          }
        }
      }
    },
    "/s_/order/company/offline/update-order-status/{code}": {
      "post": {
        "tags": ["order"],
        "description": "company updates client's offline order status",
        "summary": "company updates client's offline order status",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status", "progress_status", "reason_canceled", "reason_rejected"],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "order's status"
                  },
                  "progress_status": {
                    "type": "string",
                    "description": "order's progress status"
                  },
                  "reason_canceled": {
                    "type": "string",
                    "description": "reason order is canceled"
                  },
                  "reason_rejected": {
                    "type": "string",
                    "description": "reason order is rejected"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update order's status successfully"
          }
        }
      }
    },
    "/s_/order/admin": {
      "get": {
        "tags": ["order"],
        "summary": "admin get orders",
        "parameters": [
          {
            "name": "is_received_at_store",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "ready"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "completed",
                "user_canceled",
                "company_canceled",
                "handling",
                "picking",
                "delivering",
                "delivered",
                "user_rejected"
              ]
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cashier_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_lucky",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/order/admin/approve": {
      "post": {
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.orderNotExist': 7001400, 'client.orderMustBeOffline': 7001418, 'client.orderMustBeDelivered': 7001419,"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code"],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "order code"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/order/admin/pay-fee": {
      "post": {
        "tags": ["order"],
        "summary": "admin exec pay fee for order if not paid fee",
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.orderNotExist': 7001400, 'client.orderIsNotConfirmed'"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code"],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "order code"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/order/admin/{code}": {
      "get": {
        "tags": ["order"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/order/admin/{code}/logistics": {
      "get": {
        "tags": ["order"],
        "summary": "admin get logistics info of order",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/statistic/admin": {
      "get": {
        "tags": ["statistic"],
        "summary": "company get statistic",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/statistic/admin/{id}": {
      "get": {
        "summary": "statistic",
        "tags": ["statistic"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/s_/statistic/admin/statics": {
      "get": {
        "tags": ["statistic"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/company": {
      "get": {
        "tags": ["revenue"],
        "summary": "company get revenue",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/company/total": {
      "get": {
        "tags": ["revenue"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/company/statics": {
      "get": {
        "tags": ["revenue"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/company/statics-store": {
      "get": {
        "tags": ["revenue"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/company/statics-store-dates": {
      "get": {
        "tags": ["revenue"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/admin": {
      "get": {
        "tags": ["revenue"],
        "summary": "company get revenue",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/revenue/admin/statistic-company-date": {
      "get": {
        "tags": ["revenue"],
        "parameters": [
          {
            "name": "start_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/comment/user": {
      "get": {
        "tags": ["comment"],
        "summary": "user get personal comment",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["comment"],
        "summary": "user create comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["company_id", "content", "product_id"],
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["comment"],
        "summary": "user update comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content", "id"],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["comment"],
        "summary": "user delete comment",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/comment/user/reply": {
      "post": {
        "tags": ["comment"],
        "summary": "user create reply",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["comment_id", "company_id", "content", "product_id"],
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "string"
                  },
                  "comment_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/comment/company": {
      "get": {
        "tags": ["comment"],
        "summary": "Company get comments on their product",
        "description": "Company get comments on their product",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok status!"
          }
        }
      }
    },
    "/s_/comment/admin": {
      "get": {
        "tags": ["comment"],
        "summary": "admin get comment",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["approved", "pending", "rejected"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["comment", "reply"]
            }
          },
          {
            "name": "parent_comment_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/comment/admin/approve": {
      "post": {
        "tags": ["comment"],
        "summary": "admin approve comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content", "id"],
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["approved", "rejected", "pending"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/comment/product/{product_id}": {
      "get": {
        "tags": ["comment"],
        "summary": "get comment by product id",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/comment/{comment_id}": {
      "get": {
        "tags": ["comment"],
        "summary": "get comment by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "comment_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/comment/{comment_id}/reply": {
      "get": {
        "tags": ["comment"],
        "summary": "get reply of comment",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "parameters": [
        {
          "name": "comment_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/s_/company/company/": {
      "put": {
        "tags": ["company"],
        "summary": "company update company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "representer": {
                    "type": "string"
                  },
                  "tax_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "cover_image": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "online_sales": {
                    "type": "boolean"
                  },
                  "images": {
                    "type": "array",
                    "example": [
                      "public/uploads/s_/products/1571039354059.5d9ea88cbf370f2ff202ca5f_resized.jpg",
                      "public/uploads/s_/products/1571039354068.5d9ea88cbf370f2ff202ca5f_resized.jpg"
                    ]
                  },
                  "business_registration_form": {
                    "type": "array",
                    "example": [
                      "public/uploads/s_/products/1571039354059.5d9ea88cbf370f2ff202ca5f_resized.jpg",
                      "public/uploads/s_/products/1571039354068.5d9ea88cbf370f2ff202ca5f_resized.jpg"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "401": {
            "description": "rejected: 5000200 - company rejected cant change status"
          }
        }
      }
    },
    "/s_/company/company/pin": {
      "put": {
        "tags": ["company"],
        "summary": "company update pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_code", "new_code", "password"],
                "properties": {
                  "old_code": {
                    "type": "string",
                    "description": "if user is not active pin old code is same new code"
                  },
                  "new_code": {
                    "type": "string",
                    "description": "old code and new code have 6 charactor"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "company: 7000100 - company is not available \n user: 7001700 - user not available \n password: 5000200 - wrong password \n old_code: 5000603 - wrong old pin \n new_code: 7001705 - repeat pin"
          }
        }
      },
      "post": {
        "tags": ["company"],
        "summary": "company authorize pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["pin"],
                "properties": {
                  "pin": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "user: 7000100 - company is not available \n pin: 7001701 - wrong pin"
          }
        }
      }
    },
    "/s_/company/company/reset-pin": {
      "put": {
        "tags": ["company"],
        "summary": "company update pin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "new_code"],
                "properties": {
                  "new_code": {
                    "type": "string",
                    "description": "new code have 6 charactor"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "company: 7000100 - company is not available \n user: 7001700 - user not available \n password: 5000200 - wrong password \n old_code: 5000603 - wrong old pin \n new_code: 7001705 - repeat pin"
          }
        }
      }
    },
    "/s_/company/user/view/": {
      "get": {
        "summary": "user get views",
        "tags": ["company"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/s_/company/user/upload": {
      "post": {
        "tags": ["company"],
        "summary": "user upload company image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "string",
                    "maxLength": 5,
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product/company": {
      "get": {
        "tags": ["product"],
        "summary": "company get company product",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["product"],
        "summary": "company create product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["description", "name", "price", "store_id", "unit"],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": "8",
                    "maxLength": "256"
                  },
                  "description": {
                    "type": "string",
                    "minLength": "80",
                    "maxLength": "3096"
                  },
                  "price": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["disabled"]
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stock": {
                    "type": "object",
                    "description": "{[store_id]: stock}"
                  },
                  "category_id": {
                    "type": "string",
                    "description": "type >= 2",
                    "example": "5d0de25d68163ff7189e7418"
                  },
                  "refund_rate": {
                    "type": "string",
                    "default": "0",
                    "minLength": 0,
                    "maxLength": 1
                  },
                  "transportable": {
                    "description": "if transport packing_fields is required",
                    "type": "boolean"
                  },
                  "packaging_width": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_height": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_length": {
                    "description": "cm",
                    "type": "number"
                  },
                  "packaging_weight": {
                    "description": "gram",
                    "type": "string"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "is_free_transport": {
                    "type": "boolean"
                  },
                  "is_limited_stock": {
                    "type": "boolean"
                  },
                  "SKU": {
                    "type": "string"
                  },
                  "warranty_information": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Unlimited",
                  "description": "Unlim                                               35354333333333333333333333333333333333333333333333333333333333333333333333333",
                  "price": "30000",
                  "images": [
                    "public/uploads/s_/products/1570723964771.5d9ea88cbf370f2ff202ca5f_resized.jpg"
                  ],
                  "refund_rate": 0.1,
                  "thumbnail": "public/uploads/s_/products/1570723964771.5d9ea88cbf370f2ff202ca5f_resized.jpg",
                  "condition": "mới",
                  "transportable": true,
                  "packaging_height": 10,
                  "packaging_length": 10,
                  "packaging_weight": 10,
                  "packaging_width": 10,
                  "category_id": "5e942129ee82407ed59eab48",
                  "is_limited_stock": true,
                  "stock": {
                    "5e8d3c4e0eaf9b608f031c3a": 5
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.logisticsIsUnavailable': 7002302\n 'client.companyIsOfflineSales': 7002306,"
          }
        }
      }
    },
    "/s_/product/user/upload/": {
      "post": {
        "tags": ["product"],
        "summary": "company upload product image.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "thumbnail": {
                    "type": "string",
                    "maxLength": 1
                  },
                  "images": {
                    "type": "string",
                    "maxLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/cart/v2/user/list": {
      "get": {
        "tags": ["cart-v2"],
        "summary": "user get cart list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion/admin/:id": {
      "get": {
        "tags": ["promotion"],
        "summary": "admin get promotion",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["promotion"],
        "summary": "admin delete promotion",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion/admin/": {
      "get": {
        "tags": ["promotion"],
        "summary": "admin get promotions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_sotring_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "product store company"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["handling", "pending", "active", "expired", "disabled"]
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "createdAt query by this params"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "createdAt query by this params"
          },
          {
            "name": "start_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "find promotions, what has start_at end expire_at in this period time"
          },
          {
            "name": "expire_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "Date"
            },
            "description": "find promotions, what has start_at end expire_at in this period time"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/user/used/:code": {
      "put": {
        "tags": ["promotion_code"],
        "summary": "promotion  code: user used",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/owner/:id": {
      "get": {
        "tags": ["promotion_code"],
        "summary": "owner find promotion code by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/promotion-code/admin/:id": {
      "get": {
        "tags": ["promotion_code"],
        "summary": "admin find promotion code by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/recharge/user/": {
      "get": {
        "tags": ["recharge"],
        "summary": "get recharge",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "success, canceled",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "post": {
        "tags": ["recharge"],
        "summary": "recharge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["value"],
                "properties": {
                  "value": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/recharge/user/:id": {
      "get": {
        "tags": ["recharge"],
        "summary": "get recharge by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/recharge/admin": {
      "get": {
        "tags": ["recharge"],
        "summary": "admin get  recharge",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "success, canceled",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/recharge/admin/:id": {
      "get": {
        "tags": ["recharge"],
        "summary": "admin find recharge by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/transfer/user/": {
      "get": {
        "tags": ["transfer"],
        "summary": "user get transfer",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sender_id": {
                      "type": "string"
                    },
                    "receiver_id": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    },
                    "sender_old_balance": {
                      "type": "number"
                    },
                    "sender_new_balance": {
                      "type": "number"
                    },
                    "receiver_old_balance": {
                      "type": "number"
                    },
                    "receiver_new_balance": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["transfer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["PIN", "receiver_phone", "value"],
                "properties": {
                  "receiver_phone": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  },
                  "PIN": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/transfer/user/:id": {
      "get": {
        "tags": ["transfer"],
        "summary": "user get transfer by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/deposit-withdraw/user": {
      "get": {
        "tags": ["transaction"],
        "summary": "get transactions user",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "success, pending, cancel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "deposit , withdrawal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PIN",
            "in": "query",
            "required": false,
            "description": "required if type is \"withdraw\"",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/depositWithdraw/data"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["transaction"],
        "summary": "create transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "value",
                  "payment_type",
                  "user_bank_id",
                  "admin_bank_id",
                  "code"
                ],
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "description": "deposit, withdraw"
                  },
                  "user_bank_id": {
                    "type": "string",
                    "description": "required when type is withdraw"
                  },
                  "admin_bank_id": {
                    "type": "string",
                    "description": "required when type is deposit"
                  },
                  "PIN": {
                    "type": "string",
                    "description": "not required if type is deposit"
                  },
                  "code": {
                    "type": "string"
                  },
                  "payment_type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/depositWithdraw/data"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["transaction"],
        "summary": "update transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/deposit-withdraw/user/company": {
      "post": {
        "tags": ["transaction"],
        "summary": "create transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "value",
                  "payment_type",
                  "full_name",
                  "code",
                  "admin_bank_id",
                  "company_bank_id"
                ],
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "admin_bank_id": {
                    "type": "string",
                    "description": "required when type is deposit_company"
                  },
                  "company_bank_id": {
                    "type": "string",
                    "description": "required when type is withdraw_company"
                  },
                  "PIN": {
                    "type": "string",
                    "description": "not required if type is deposit"
                  },
                  "code": {
                    "type": "string"
                  },
                  "payment_type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/depositWithdraw/data"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["transaction"],
        "summary": "get transactions company",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },

          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "success, pending, cancel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "deposit , withdrawal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/depositWithdraw/data"
                }
              }
            }
          }
        }
      }
    },
    "s_/deposit-withdraw/user/vnp-deposit": {
      "post": {
        "tags": ["transaction"],
        "summary": "create transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "value"],
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["deposit", "deposit_company"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 2000000",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vnpUrl": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "fee": {
                          "type": "number"
                        },
                        "refund": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        },
                        "payment_type": {
                          "type": "string",
                          "valid": "vnpay"
                        },
                        "sms_message": {
                          "type": "string"
                        },
                        "_id": {
                          "type": "string"
                        },
                        "value": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": ["deposit", "deposit_company"]
                        },
                        "code": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "string"
                        },
                        "old_balance": {
                          "type": "number"
                        },
                        "new_balance": {
                          "type": "number"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "client.companyNotApproved : 7000102 \n company is not approved"
          }
        }
      }
    },
    "/s_/deposit-withdraw/admin": {
      "get": {
        "tags": ["transaction"],
        "summary": "admin: get transaction",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "success, pending, canceled",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "deposit, withdraw",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PIN",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/deposit-withdraw/admin/confirm": {
      "put": {
        "tags": ["transaction"],
        "summary": "confirm transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status", "id"],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "success, pending, canceled",
                    "valid": "success, pending, canceld"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/deposit-withdraw/admin/:id": {
      "get": {
        "tags": ["transaction"],
        "summary": "admin get transaction by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/transfer/admin": {
      "get": {
        "tags": ["transfer"],
        "summary": "admin get transfer",
        "parameters": [
          {
            "name": "limi",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sender_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/transfer/admin/:id": {
      "get": {
        "tags": ["transfer"],
        "summary": "admin get transfer by id",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission/admin": {
      "get": {
        "tags": ["permission"],
        "summary": "admin get list permissions",
        "parameters": [
          {
            "name": "limi",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/owner/status": {
      "put": {
        "tags": ["permission-group"],
        "summary": "update status permission-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "status"],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "description": "active , disabled"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/owner/": {
      "put": {
        "tags": ["permission-group"],
        "summary": "update permission-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "description": "active , disabled"
                  },
                  "store_id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "valid": ["typist", "company_stock", "cashier", "seller", "store_stock"]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/owner": {
      "post": {
        "tags": ["permission-group"],
        "summary": "create permission-group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["store_id", "type", "phone_number"],
                "properties": {
                  "phone_number": {
                    "type": "string"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "store is required when type has any value of seller, store_stock, cashier"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "valid": ["typist", "company_stock", "cashier", "seller", "store_stock"]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "get": {
        "tags": ["permission-group"],
        "summary": "company get list staffs",
        "parameters": [
          {
            "name": "limi",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["typist", "cashier", "seller"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "disabled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/owner/mod/:id": {
      "get": {
        "tags": ["permission-group"],
        "summary": "company get group permisison by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/user/": {
      "get": {
        "tags": ["permission-group"],
        "summary": "user get personal permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/admin": {
      "get": {
        "tags": ["permission-group"],
        "summary": "admin get list groups permisison",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": "active, disabled"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": ["typist", "company_stock", "cashier", "seller", "store_stock"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/admin/raw": {
      "get": {
        "tags": ["permission-group"],
        "summary": "admin get list groups permisison",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": "active, disabled"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": ["typist", "company_stock", "cashier", "seller", "store_stock"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/permission-group/admin/:id": {
      "get": {
        "tags": ["permission-group"],
        "summary": "admin get group permisison by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/report/user": {
      "get": {
        "tags": ["report"],
        "summary": "User get reports by query.",
        "description": "User get reports by query.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "handled"],
              "example": "pending, handling"
            }
          },
          {
            "name": "reporter_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["user", "company"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "general",
                "payment",
                "delivery",
                "order",
                "product",
                "experience",
                "security",
                "refund",
                "promotion",
                "other",
                "campaign",
                "legal",
                "performance"
              ]
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "post": {
        "tags": ["report"],
        "summary": "User submit a report.",
        "description": "User submit a report.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "reporter_type": {
                    "type": "string",
                    "enum": ["user", "company"]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "general",
                      "payment",
                      "delivery",
                      "order",
                      "product",
                      "experience",
                      "security",
                      "refund",
                      "promotion",
                      "other",
                      "campaign",
                      "legal",
                      "performance"
                    ],
                    "required": true
                  },
                  "content": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 4000,
                    "required": true
                  },
                  "language": {
                    "type": "string",
                    "enum": ["en", "vi"]
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 5
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/report/user/{id}": {
      "get": {
        "tags": ["report"],
        "summary": "User get report by id.",
        "description": "User get report by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "put": {
        "tags": ["report"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_code": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 24,
                    "maxLength": 1024
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "delete": {
        "tags": ["report"],
        "deprecated": true,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/report/admin": {
      "get": {
        "tags": ["report"],
        "summary": "Admin get reports by query.",
        "description": "Admin get reports by query.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "handled", "hidden"],
              "example": "pending, handling"
            }
          },
          {
            "name": "reporter_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["user", "company"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "general",
                "payment",
                "delivery",
                "order",
                "product",
                "experience",
                "security",
                "refund",
                "promotion",
                "other",
                "campaign",
                "legal",
                "performance"
              ]
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "handling", "handled", "hidden"],
              "example": "pending, handling"
            }
          },
          {
            "name": "reporter_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["user", "company"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "general",
                "payment",
                "delivery",
                "order",
                "product",
                "experience",
                "security",
                "refund",
                "promotion",
                "other",
                "campaign",
                "legal",
                "performance"
              ]
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "admin_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/report/admin/confirm": {
      "post": {
        "tags": ["report"],
        "description": "Admin confirm user's report",
        "summary": "Admin confirm user's report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "report_id": {
                    "type": "string",
                    "required": true
                  },
                  "response": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/report/admin/{id}": {
      "get": {
        "tags": ["report"],
        "summary": "Admin get report by id.",
        "description": "Admin get report by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "put": {
        "tags": ["report"],
        "summary": "Admin update report by id.",
        "description": "Admin update report by id.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["handled", "hidden"]
                  },
                  "response": {
                    "type": "string"
                  },
                  "hidden_reason": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "delete": {
        "tags": ["report"],
        "deprecated": true,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/s_/admin-bank/admin": {
      "post": {
        "tags": ["admin-bank"],
        "summary": "create admin-bank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bank_name",
                  "bank_account",
                  "bank_branch",
                  "bank_owner_name",
                  "image_path"
                ],
                "properties": {
                  "bank_name": {
                    "type": "string"
                  },
                  "bank_account": {
                    "type": "string"
                  },
                  "bank_branch": {
                    "type": "string",
                    "description": ""
                  },
                  "bank_owner_name": {
                    "type": "string",
                    "description": ""
                  },
                  "image_path": {
                    "type": "string",
                    "description": ""
                  },
                  "priority": {
                    "type": "number",
                    "description": "Priority",
                    "default": 0
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["admin-bank"],
        "summary": "update admin-bank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bank_name": {
                    "type": "string"
                  },
                  "bank_account": {
                    "type": "string"
                  },
                  "bank_branch": {
                    "type": "string",
                    "description": ""
                  },
                  "bank_owner_name": {
                    "type": "string",
                    "description": ""
                  },
                  "image_path": {
                    "type": "string",
                    "description": ""
                  },
                  "priority": {
                    "type": "number",
                    "description": "Priority"
                  },
                  "status": {
                    "type": "number",
                    "enum": ["active", "disabled"]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "get": {
        "tags": ["admin-bank"],
        "summary": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_account",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_owner_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/admin-bank/admin/:id": {
      "get": {
        "tags": ["admin-bank"],
        "summary": "admin bank: get record by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["admin-bank"],
        "summary": "admin bank: delete record by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/admin-bank/user": {
      "get": {
        "tags": ["admin-bank"],
        "summary": "user get records",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_account",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_owner_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/admin-bank/user/:id": {
      "get": {
        "tags": ["admin-bank"],
        "summary": "user: get record by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/payment_code/user": {
      "post": {
        "tags": ["payment_code"],
        "description": "user create new payment_code",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/s_/notification/company": {
      "get": {
        "tags": ["notification"],
        "summary": "company get company's notification",
        "description": "type: 'user_receive_commission', 'company_suspend', 'company_balance_below_30', 'company_balance_below_50', 'company_deposit_success', 'company_deposit_error', 'company_withdraw_success', 'company_withdraw_error', 'company_new_order', 'company_user_pay_order', 'company_pay_transport_fee', 'user_deposit_success', 'user_deposit_error', 'user_withdraw_success' 'user_withdraw_error' 'user_buy_mobile_card_success', 'user_buy_mobile_card_fail', 'user_pay_order_success', 'user_return_commission', 'user_cancel_order_success', 'user_completed_order', 'user_delivering_order', 'user_delivered_order', 'user_rejected_order', 'user_company_canceled_order', 'user_new_product', 'user_receive_money' 'user_send_money','company_move_stock_request','company_move_stock_finished",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_types",
            "in": "query",
            "required": false,
            "description": "list of types, separate by commas. Higher priority than exclude_types",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_types",
            "in": "query",
            "required": false,
            "description": "list of types, separate by commas",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/notification/company/mark-read": {
      "post": {
        "tags": ["notification"],
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "if not exist mark as read all",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Status 200"
        }
      }
    },
    "/s_/notification/company/device": {
      "post": {
        "deprecated": true,
        "tags": ["notification"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": ["mobile", "web"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/notification/user": {
      "get": {
        "tags": ["notification"],
        "summary": "user get user's notification",
        "description": "type: 'user_receive_commission', 'company_suspend', 'company_balance_below_30', 'company_balance_below_50', 'company_deposit_success', 'company_deposit_error', 'company_withdraw_success', 'company_withdraw_error', 'company_new_order', 'company_user_pay_order', 'company_pay_transport_fee', 'user_deposit_success', 'user_deposit_error', 'user_withdraw_success' 'user_withdraw_error' 'user_buy_mobile_card_success', 'user_buy_mobile_card_fail', 'user_pay_order_success', 'user_return_commission', 'user_cancel_order_success', 'user_completed_order', 'user_delivering_order', 'user_delivered_order', 'user_rejected_order', 'user_company_canceled_order', 'user_new_product', 'user_receive_money' 'user_send_money'",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "list of types, separate by commas. Higher priority than exclude_types"
          },
          {
            "name": "exclude_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "list of types, separate by commas"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/notification/user/mark-read": {
      "post": {
        "tags": ["notification"],
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "if not exist mark as read all",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Status 200"
        }
      }
    },
    "/s_/notification/user/device": {
      "post": {
        "tags": ["notification"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": ["mobile", "web"]
                  },
                  "device_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-storing/company/import-product-to-store": {
      "post": {
        "summary": "import product to product storing in store",
        "tags": ["product-storing"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["products", "store_id"],
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "stock": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "store_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-storing/company/{product_storing_id}": {
      "put": {
        "summary": "update product storing",
        "tags": ["product-storing"],
        "parameters": [
          {
            "name": "product_storing_id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-storing/company": {
      "get": {
        "summary": "get product storing",
        "tags": ["product-storing"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-storing/company/search": {
      "get": {
        "summary": "get product storing",
        "tags": ["product-storing"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/product-storing/company/update-stock": {
      "post": {
        "tags": ["product-storing"],
        "summary": "stock in, stock out productStoring.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "productStorings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "stock": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "note": { "type": "string" },
                  "provider": { "type": "string" }
                },
                "example": {
                  "type": "import | export",
                  "productStorings": [
                    {
                      "id": "5e96b37a1181235f7514abf7",
                      "stock": 70000
                    },
                    {
                      "id": "5e96b37a1181235f7514abf1",
                      "stock": 5000
                    },
                    {
                      "id": "5e96b37a1181235f7514abf6",
                      "stock": 70000
                    }
                  ],
                  "note": "T_T",
                  "provider": "<script>window.location = 'http://example.com'</script>"
                }
              }
            },
            "required": true
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.productNotExist': 7001300, 'client.stockCannotBeNegative': 7001303"
          }
        }
      }
    },
    "/s_/product-storing/company/request-move-stock": {
      "post": {
        "tags": ["product-storing"],
        "summary": "Request move product stock from store A to store B",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "required": true
                  },
                  "from_store_id": {
                    "type": "string",
                    "required": true
                  },
                  "to_store_id": {
                    "type": "string",
                    "required": true
                  },
                  "stock": {
                    "type": "number",
                    "required": true
                  }
                },
                "example": {
                  "product_id": "5e7494bf6bd99e6a93fb2bff",
                  "from_store_id": "5e74812f6bd99e6a93faf90d",
                  "to_store_id": "5e7481556bd99e6a93fafb77",
                  "stock": 1
                }
              }
            }
          }
        }
      }
    },
    "/s_/product-storing/company/confirm-move-stock": {
      "post": {
        "tags": ["product-storing"],
        "summary": "Confirm/cancel move product stock from store A to store B",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_stock_history_id": {
                    "type": "string",
                    "required": true
                  },
                  "status": {
                    "type": "string",
                    "required": true,
                    "enum": ["completed", "cancelled"]
                  },
                  "stock": {
                    "type": "number",
                    "description": "uses this fields if the quantity of received product was not equals the requested quantity"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_stock_history_id": "5f0d35ae6c7576412cf80ad6",
                  "status": "completed",
                  "stock": 2,
                  "note": "1/3 san pham bi hu, chi nhan 2 san pham"
                }
              }
            }
          }
        }
      }
    },
    "/s_/stock/company/update-stock": {
      "post": {
        "tags": ["stock"],
        "summary": "Company import/export product stocks.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["import", "export"] },
                  "provider": { "type": "string", "description": "Required when type is `import`" },
                  "note": { "type": "string" },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "stock": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "products": [
                    { "id": "5e7494bf6bd99e6a93fb2bff", "stock": 10 },
                    { "id": "5e7494bf6bd99e6a93fb2c0a", "stock": 5 }
                  ],
                  "provider": "provider A [Required when type is `import`]",
                  "note": "<script>window.location = 'http://example.com'</script>",
                  "type": "import / export"
                }
              }
            },
            "required": true
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.productNotExist': 7001300, 'client.stockCannotBeNegative': 7001303"
          }
        }
      }
    },
    "/s_/stock/company/request-move": {
      "post": {
        "tags": ["stock"],
        "summary": "Company request move stock from [stock | store]_to_[store | stock].",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "moving_type": {
                    "type": "string",
                    "enum": ["stock_to_store", "store_to_stock"]
                  },
                  "product_id": {
                    "type": "string",
                    "required": true
                  },
                  "store_id": {
                    "type": "string",
                    "required": true
                  },
                  "stock": {
                    "type": "number",
                    "required": true
                  },
                  "note": {
                    "type": "string"
                  },
                  "requester_type": {
                    "type": "string",
                    "default": "store",
                    "enum": ["stock", "store"]
                  }
                },
                "example": {
                  "moving_type": "store_to_stock | stock_to_store",
                  "requester_type": "store | stock",
                  "store_id": "5e74819e6bd99e6a93fb004a",
                  "product_id": "5e7494bf6bd99e6a93fb2bff",
                  "stock": 5,
                  "note": "<script>window.location = 'http://example.com'</script>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successfully!"
          }
        }
      }
    },
    "/s_/stock/company/confirm-move": {
      "post": {
        "tags": ["stock"],
        "summary": "Company confirm move request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_stock_history_id": {
                    "type": "string",
                    "required": true
                  },
                  "status": {
                    "type": "string",
                    "required": true,
                    "enum": ["completed", "cancelled"]
                  },
                  "stock": {
                    "type": "number",
                    "description": "uses this fields if the quantity of received product was not equals the requested quantity"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_stock_history_id": "5f0d35ae6c7576412cf80ad6",
                  "status": "completed",
                  "stock": 2,
                  "note": "1/3 san pham bi hu, chi nhan 2 san pham"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirm successfully!"
          }
        }
      }
    },
    "/s_/stock/company/approve-move": {
      "post": {
        "tags": ["stock"],
        "summary": "Company approve move request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_stock_history_id": {
                    "type": "string",
                    "required": true
                  },
                  "status": {
                    "type": "string",
                    "required": true,
                    "enum": ["approved", "cancelled"]
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_stock_history_id": "5f0d35ae6c7576412cf80ad6",
                  "status": "approved",
                  "note": "Ok."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Approve successfully!"
          }
        }
      }
    },
    "/user-sms/admin": {
      "get": {
        "tags": ["user-sms"],
        "summary": "admin get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/user-sms/admin/:id": {
      "get": {
        "tags": ["user-sms"],
        "summary": "admin get by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/upload-images": {
      "post": {
        "tags": ["upload image"],
        "summary": "upload image",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "company_logo",
                "company_cover",
                "company_images",
                "product_thumbnail",
                "product_images",
                "banner",
                "business_registration_form",
                "company_deposit"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["images"],
                "properties": {
                  "images": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": ""
          }
        }
      }
    },
    "/s_/v2/upload-images": {
      "post": {
        "tags": ["upload image"],
        "summary": "upload image",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "company_logo",
                "company_cover",
                "company_images",
                "product_thumbnail",
                "product_images",
                "banner",
                "business_registration_form",
                "company_deposit",
                "category"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["images"],
                "properties": {
                  "images": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": ""
          }
        }
      }
    },
    "/s_/upload-private-images": {
      "post": {
        "tags": ["upload image"],
        "summary": "upload image",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["images"],
                "properties": {
                  "images": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": ""
          }
        }
      }
    },
    "/s_/company-money-flow": {
      "get": {
        "tags": ["company money flow"],
        "summary": "admin get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/s_/history/user": {
      "get": {
        "tags": ["user history"],
        "summary": "user get transaction history",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": [
                "deposit",
                "withdraw",
                "deposit_company",
                "withdraw_company",
                "transfer_sender",
                "transfer_receiver",
                "pay_order",
                "pay_cart",
                "pay_bill",
                "pay_topup",
                "refund",
                "fee",
                "commission",
                "return_canceled_order"
              ]
            },
            "description": "deposit, withdraw, transfer_sender, transfer_receiver, mobile_card, pay_order, pay_cart, refund, fee, commission, return_commission, refund_failed_order, refund_canceled_order, return_refund_canceled_order"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onModel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "s_deposit_withdraw, s_mobilecards, s_transfers, s_payments, s_order, s_cart"
          }
        ],
        "responses": {
          "200": {
            "description": "deposit, withdraw: deposit-withdraw/user; \n transfer_sender/receiver: transfer/user; \nmobile_card: mobile-card/user;\n pay_order: order/user; \npay_cart: cart/user; \nrefund,commission,fee need onModel filed to select response schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string"
                    },
                    "transaction_id": {
                      "type": "object"
                    },
                    "onModel": {
                      "type": "string",
                      "valid": "s_deposit_withdraw, s_transfer, s_mobilecards, s_order, s_payments, s_cart"
                    },
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/s_/company-history/admin": {
      "get": {
        "tags": ["company history"],
        "summary": "admin get transaction history",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "deposit",
                "withdraw",
                "user_pay_order",
                "pay_service_fee",
                "pay_transport_fee",
                "pay_banner_fee",
                "refund_order"
              ]
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onModel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "s_deposit_withdraw, s_mobilecards, s_transfers, s_payments, s_order, s_cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "example": [
                  {
                    "_id": "5e8d8fb97075c9535af49636",
                    "company_id": "5e8d3b517494ba5fc6c75bd8",
                    "type": "pay_service_fee",
                    "transaction_id": "5e8d8a3c4ea5a54b02825024",
                    "new_balance": 779540,
                    "value": -817,
                    "onModel": "s_order",
                    "createdAt": "2020-04-08T08:47:53.125Z",
                    "updatedAt": "2020-04-08T08:47:53.125Z",
                    "__v": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/s_/company-history/": {
      "get": {
        "tags": ["company history"],
        "summary": "company get transaction history",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "user_pay_order, pay_service_fee, pay_transport_fee, refund_order => s_order \n | deposit, withdraw =>  s_deposit_withdraw\n | pay_banner_fee => s_banner",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "deposit",
                "withdraw",
                "user_pay_order",
                "pay_service_fee",
                "pay_transport_fee",
                "refund_order",
                "pay_banner_fee"
              ]
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "_id": "5e8d8fb97075c9535af49636",
                  "company_id": "5e8d3b517494ba5fc6c75bd8",
                  "type": "pay_service_fee",
                  "transaction_id": "5e8d8a3c4ea5a54b02825024",
                  "new_balance": 779540,
                  "value": -817,
                  "onModel": "s_order",
                  "createdAt": "2020-04-08T08:47:53.125Z",
                  "updatedAt": "2020-04-08T08:47:53.125Z",
                  "__v": 0
                }
              }
            }
          }
        }
      }
    },
    "/s_/history/admin": {
      "get": {
        "tags": ["user history"],
        "summary": "admin get transaction history",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "valid": "deposit,withdraw,deposit_company,withdraw_company,transfer_sender,transfer_receiver,mobile_card,pay_order,pay_cart,payment,refund,fee,commission,return_commission,refund_failed_order,refund_canceled_order,return_refund_canceled_order"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/logistics/company": {
      "get": {
        "tags": ["logistics"],
        "summary": "company get using logistics",
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "put": {
        "tags": ["logistics"],
        "summary": "company update logistics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "disabled"]
                  }
                }
              },
              "example": {
                "provider": "ghn",
                "token": "95091cfab6c54f0ebc4039d6ffa036a1",
                "status": "active",
                "is_default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.logisticsTokenIsNotValid': 7002300"
          }
        }
      }
    },
    "/s_/logistics/user/available": {
      "get": {
        "tags": ["logistics"],
        "summary": "user get available logistics of a company",
        "parameters": [
          {
            "name": "company_id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/company/user-start-chat": {
      "post": {
        "tags": ["chat"],
        "summary": "user start chat with company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/menu/company": {
      "post": {
        "tags": ["menu"],
        "summary": "company create or update menu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["store_id", "product_ids"],
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "store_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "disabled"],
                    "default": "active"
                  }
                },
                "example": {
                  "product_ids": ["5e96b3901181235f7514abfa"],
                  "store_id": "5e8d3c4e0eaf9b608f031c3a",
                  "status": "active"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      },
      "delete": {
        "tags": ["menu"],
        "summary": "company remove product from menu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["store_id", "product_ids"],
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "store_id": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_ids": ["5e96b3901181235f7514abfa"],
                  "store_id": "5e8d3c4e0eaf9b608f031c3a"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/menu/user": {
      "get": {
        "tags": ["menu"],
        "description": "user get menu of a store",
        "parameters": [
          {
            "name": "store_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/lucky-shopping/winners": {
      "get": {
        "tags": ["lucky-shopping"],
        "description": "user get lucky-shopping",
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/lucky-shopping/admin/winners": {
      "post": {
        "tags": ["lucky-shopping"],
        "description": "admin set winner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["product_id", "order_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "order_id": {
                    "type": "string"
                  },
                  "winner_id": {
                    "type": "string",
                    "description": "if winner is real member"
                  },
                  "winner_name": {
                    "type": "string required if fake winner"
                  }
                },
                "example": {
                  "product_id": "5ebc9f3c516ca936d9dad93d",
                  "winner_name": "Doan Cong Minh",
                  "winner_id": "5e5f2a19ee81e04d90580998",
                  "order_id": "5ebca4995be00b3be447e6ac"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.orderNotExist': 7001400, 'client.productNotExist': 7001300"
          }
        }
      }
    },
    "s_/bill/user/query": {
      "get": {
        "tags": ["bill"],
        "description": "user query bill to pay",
        "parameters": [
          {
            "name": "publisher",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/bill/user/pay": {
      "post": {
        "tags": ["bill"],
        "description": "user pay bills",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "publisher": {
                    "type": "string",
                    "required": "true"
                  },
                  "type": {
                    "type": "string",
                    "required": "true"
                  },
                  "customer_code": {
                    "type": "string",
                    "required": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/bill/user": {
      "get": {
        "tags": ["bill"],
        "description": "user get bills",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/bill/user/{id}": {
      "get": {
        "tags": ["bill"],
        "description": "user get bills",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/bill/admin": {
      "get": {
        "tags": ["bill"],
        "description": "admin get bills",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/bill/admin/{id}": {
      "get": {
        "tags": ["bill"],
        "description": "user get bills",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/admin": {
      "get": {
        "tags": ["topup"],
        "description": "admin get topups",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisher",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [30000, 50000, 100000, 200000, 300000, 500000]
            }
          },
          {
            "name": "combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["three_month", "six_month", "twelve_month"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["fast", "slow"]
            }
          },
          {
            "name": "combo_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/admin/{id}": {
      "get": {
        "tags": ["topup"],
        "description": "user get topup by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/admin/combo": {
      "get": {
        "tags": ["topup"],
        "description": "admin get combos",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisher",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [30000, 50000, 100000, 200000, 300000, 500000]
            }
          },
          {
            "name": "combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["three_month", "six_month", "twelve_month"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["fast", "slow"]
            }
          },

          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/admin/combo/{id}": {
      "get": {
        "tags": ["topup"],
        "description": "user get combo by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user": {
      "get": {
        "tags": ["topup"],
        "description": "user get topups",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisher",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [30000, 50000, 100000, 200000, 300000, 500000]
            }
          },
          {
            "name": "combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["three_month", "six_month", "twelve_month"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["fast", "slow"]
            }
          },
          {
            "name": "combo_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user/{id}": {
      "get": {
        "tags": ["topup"],
        "description": "user get topup by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user/combo": {
      "get": {
        "tags": ["topup"],
        "description": "admin get combo",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "publisher",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "enum": [30000, 50000, 100000, 200000, 300000, 500000]
            }
          },
          {
            "name": "combo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["three_month", "six_month", "twelve_month"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["fast", "slow"]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "iso date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user/combo/{id}": {
      "get": {
        "tags": ["topup"],
        "description": "user get combo by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user/checkout": {
      "post": {
        "tags": ["topup"],
        "description": "user checkout payment info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "publisher": {
                    "type": "string",
                    "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
                  },
                  "amount": {
                    "type": "string",
                    "enum": [30000, 50000, 100000, 200000, 300000, 500000]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["fast", "slow"]
                  },
                  "combo": {
                    "type": "string",
                    "enum": ["three_month", "six_month", "twelve_month"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "s_/topup/user/pay": {
      "post": {
        "tags": ["topup"],
        "description": "user pay topup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "publisher": {
                    "type": "string",
                    "enum": ["VTT", "VNM", "VNP", "VMS", "GMB"]
                  },
                  "amount": {
                    "type": "string",
                    "enum": [30000, 50000, 100000, 200000, 300000, 500000]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["fast", "slow"]
                  },
                  "receiver": {
                    "type": "string"
                  },
                  "combo": {
                    "type": "string",
                    "enum": ["three_month", "six_month", "twelve_month"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "403": {
            "description": "7001803 partner_code 06 - phone or publisher not valid"
          }
        }
      }
    },
    "s_/user-bank/user": {
      "post": {
        "tags": ["user-bank"],
        "description": "list banks of user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "required": "true",
                    "description": "name of bank"
                  },
                  "branch": {
                    "type": "string",
                    "required": "true"
                  },
                  "account_name": {
                    "type": "string",
                    "required": "true",
                    "description": "recommend to uppercase"
                  },
                  "account_number": {
                    "type": "number",
                    "required": "true"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/userBankRes/data"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/userBankRes/errors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["user-bank"],
        "description": "user get personal bank",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/userBankRes/data"
                  }
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/userBankRes/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user-bank"],
        "description": "list banks of user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bank_id": {
                    "type": "string",
                    "required": "true"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of bank"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "account_name": {
                    "type": "string",
                    "description": "recommend to uppercase"
                  },
                  "account_number": {
                    "type": "number"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/userBankRes/data"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/userBankRes/errors"
                }
              }
            }
          }
        }
      }
    },
    "s_/company-bank/company": {
      "post": {
        "tags": ["company-bank"],
        "description": "list banks of company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "required": "true",
                    "description": "name of bank"
                  },
                  "branch": {
                    "type": "string",
                    "required": "true"
                  },
                  "account_name": {
                    "type": "string",
                    "required": "true",
                    "description": "recommend to uppercase"
                  },
                  "account_number": {
                    "type": "number",
                    "required": "true"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/companyBankRes/data"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/companyBankRes/errors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["company-bank"],
        "description": "user get personal bank",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/companyBankRes/data"
                  }
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/companyBankRes/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["company-bank"],
        "description": "list banks of user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bank_id": {
                    "type": "string",
                    "required": "true"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of bank"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "account_name": {
                    "type": "string",
                    "description": "recommend to uppercase"
                  },
                  "account_number": {
                    "type": "number"
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/companyBankRes/data"
                }
              }
            }
          },
          "400": {
            "description": "client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/companyBankRes/errors"
                }
              }
            }
          }
        }
      }
    },
    "/s_/lucky-shopping/": {
      "get": {
        "tags": ["lucky-shopping"],
        "description": "user get lucky-shopping",
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/lucky-shopping/admin/users": {
      "get": {
        "tags": ["lucky-shopping"],
        "description": "admin get user order statistis",
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/lucky-shopping/admin/": {
      "post": {
        "tags": ["lucky-shopping"],
        "description": "admin set winner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["product_id", "order_id"],
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "number_prizes": {
                    "type": "number"
                  },
                  "_id": {
                    "type": "string"
                  },
                  "order_ids": {
                    "type": "array"
                  }
                },
                "example": {
                  "product_id": "5ebc9f3c516ca936d9dad93d",
                  "number_prizes": "5",
                  "_id": "5e5f2a19ee81e04d90580998",
                  "order_ids": ["5ebca4995be00b3be447e6ac"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.orderNotExist': 7001400, 'client.productNotExist': 7001300"
          }
        }
      }
    },
    "/s_/lucky-shopping/admin/sale-date": {
      "post": {
        "tags": ["lucky-shopping"],
        "description": "admin set sale date of product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["product_ids", "date"],
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "date": {
                    "type": "string"
                  }
                },
                "example": {
                  "product_ids": ["5ebc9f3c516ca936d9dad93d"],
                  "date": "2020-05-14T03:04:37.679Z"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "'client.cannotChangeProductOnSale': 7001305"
          }
        }
      }
    },
    "/s_/transaction-count/user": {
      "get": {
        "tags": ["transaction count"],
        "description": "transaction info",

        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/transaction-count/company": {
      "get": {
        "tags": ["transaction count"],
        "description": "transaction info",

        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/behavior/admin": {
      "get": {
        "tags": ["behavior"],
        "description": "Admin get the user's behaviors.",
        "summary": "Admin get the user's behaviors.",
        "parameters": [
          {
            "name": "limit",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "page",
            "type": "number",
            "required": false,
            "in": "query"
          },
          {
            "name": "select",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "company_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "store_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "product_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "user_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "comment_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "buy_online",
                "buy_offline",
                "cancel_order",
                "view_product",
                "share_product",
                "like_product",
                "unlike_product",
                "favorite_product",
                "unfavorite_product",
                "view_company",
                "like_company",
                "unlike_company",
                "rate_company",
                "unrate_company",
                "follow_company",
                "unfollow_company",
                "share_company",
                "comment"
              ]
            },
            "in": "query"
          },
          {
            "name": "created_from",
            "type": "iso date",
            "required": false,
            "in": "query"
          },
          {
            "name": "created_to",
            "type": "iso date",
            "required": false,
            "in": "query"
          },
          {
            "name": "province_code",
            "type": "string",
            "required": false,
            "in": "query"
          }
        ],

        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/behavior/admin/{behavior_id}": {
      "get": {
        "tags": ["behavior"],
        "description": "Admin get a user's behaviors.",
        "summary": "Admin get a user's behaviors.",
        "parameters": [
          {
            "name": "behavior_id",
            "type": "string",
            "required": true,
            "in": "query"
          }
        ],

        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/recommend/product": {
      "get": {
        "tags": ["recommend"],
        "description": "Get recommended products.",
        "summary": "Get recommended products.",
        "parameters": [
          {
            "name": "limit",
            "type": "number",
            "required": false,
            "in": "query"
          },
          {
            "name": "select",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "type_category_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "company_category_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "sub_category_id",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "name": "price",
            "type": "number",
            "required": false,
            "in": "query"
          }
        ],

        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    },
    "/s_/payment-gateway/admin/alepay/restore": {
      "post": {
        "tags": ["payment-gateway"],
        "summary": "handle if payment is paid but not hooked",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code", "type"],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status 200"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Localhost",
      "url": "http://localhost:3000/api"
    },
    {
      "description": "Dev Server",
      "url": "https://api.sieuthihoantien.com/api"
    },
    {
      "description": "Production Server",
      "url": "https://api.sumviet.com/api"
    }
  ],
  "security": [
    {
      "httpBearer": []
    }
  ],
  "components": {
    "securitySchemes": {
      "httpBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {
      "Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": true
      },
      "BodyResetPassword": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["phone, token, password"],
              "properties": {
                "phone": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "userBankRes": {
      "data": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "branch": { "type": "string" },
          "account_name": { "type": "string" },
          "account_number": { "type": "string" },
          "is_default": { "type": "boolean" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "errors": {
        "example": [
          {
            "bank": "7002401",
            "message": "bank is existed",
            "description": "only exist in post api"
          },
          {
            "user": "7001700",
            "message": "user is not found"
          }
        ]
      }
    },
    "companyBankRes": {
      "data": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "branch": { "type": "string" },
          "account_name": { "type": "string" },
          "account_number": { "type": "string" },
          "is_default": { "type": "boolean" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "errors": {
        "example": [
          {
            "bank": "7002401",
            "message": "bank is existed",
            "description": "only exist in post api"
          },
          {
            "permisison": "5000102",
            "message": "permission is not allowed"
          },
          {
            "company": "7000100",
            "message": "company is not existed"
          }
        ]
      }
    },
    "depositWithdraw": {
      "data": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "cashier_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "valid": "deposit, withdraw, deposit_company, withdraw_company"
          },
          "value": {
            "type": "number"
          },
          "fee": {
            "type": "number"
          },
          "refund": {
            "type": "number"
          },
          "admin_bank_id": {
            "type": "string",
            "description": "exist when type is withdraw or withdraw_company"
          },
          "company_bank_id": {
            "type": "string",
            "description": "exist when type is deposit_company"
          },
          "user_bank_id": {
            "type": "string",
            "description": "exist when type is deposit"
          },
          "obl_balance": {
            "type": "number"
          },
          "new_balance": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "payment_type": {
            "type": "string",
            "valid": "manual"
          },
          "code": {
            "type": "string"
          },
          "sms_message": {
            "type": "string"
          },
          "bill_image": {
            "type": "string"
          }
        }
      }
    }
  }
}
